openapi: 3.0.1
info:
  contact:
    email: info@finbourne.com
    name: FINBOURNE Technology
    url: https://www.finbourne.com
  description: "### Introduction\r\n\r\nThis page documents the LUSID Access Management\
    \ APIs from FINBOURNE Technology, which allow authorised users to query and update\
    \ their access control policies and roles within the LUSID platform's Identity\
    \ and Access Management system.\r\n\r\n"
  termsOfService: https://www.finbourne.com/legal/terms-conditions
  title: FINBOURNE Access Management API
  version: 0.0.3566
  x-logo:
    url: https://www.lusid.com/app/assets/logo_white.png
    backgroundColor: '#415464'
servers:
- url: https://fbn-prd.lusid.com/access
security:
- {}
tags:
- description: Methods for querying application metadata
  name: Application Metadata
- description: Endpoints for interacting with the current user's access rights
  name: Policies
- description: Endpoints for administering Roles
  name: Roles
- description: Endpoints for administering user-roles
  name: User-roles
paths:
  /api/me:
    get:
      description: Gets all Policies for the current user
      operationId: GetOwnPolicies
      parameters:
      - description: Optional. Filter on the applications that the policies apply
          to
        explode: true
        in: query
        name: applications
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
        x-nullable: true
      - description: Optional. The AsAt date time of the data
        explode: true
        in: query
        name: asAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-nullable: true
      - description: Optional. Order the results by these fields. Use use the '-'
          sign to denote descending order e.g. -MyFieldName
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
        x-nullable: true
      - description: "Optional. When paginating, skip this number of results"
        explode: true
        in: query
        name: start
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-nullable: true
      - description: "Optional. When paginating, limit the number of returned results\
          \ to this many."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-nullable: true
      - description: Optional. Expression to filter the result set
        explode: true
        in: query
        name: filter
        required: false
        schema:
          maxLength: 16384
          minLength: 0
          pattern: "^[\\s\\S]*$"
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              example:
              - sourceRole:
                  scope: default
                  code: example-source-role
                roleHierarchyIndex: 50
                description: Example policy demonstrating the granting of access to
                  some resources
                applications:
                - LUSID
                policyType: Entitlement
                id:
                  scope: default
                  code: official-portfolios-read-only
                grant: Allow
                selectors:
                - idSelectorDefinition:
                    identifier:
                      scope: official
                    actions:
                    - scope: default
                      activity: Read
                      entity: Portfolio
                    - scope: default
                      activity: Aggregate
                      entity: Portfolio
                    name: access-official-scope
                    description: Allow readonly access to the 'official' scope
                for:
                - effectiveRange:
                    from: 2015-12-25T00:00:00.0000000+00:00
                    to: 2020-12-25T00:00:00.0000000+00:00
                - asAtRangeForSpec:
                    from:
                      dateTimeOffset: 2018-01-01T00:00:00.0000000+00:00
                    to:
                      value: AsAt=Latest
                if:
                - ifRequestHeaderExpression:
                    headerName: organisation.specific.group.header
                    operator: EqualsCaseInsensitive
                    value: special-group
                when:
                  activate: 2016-08-31T18:00:00.0000000+00:00
                  deactivate: 2020-08-31T18:00:00.0000000+00:00
              schema:
                items:
                  $ref: '#/components/schemas/AttachedPolicyDefinitionResponse'
                type: array
            application/json:
              example:
              - sourceRole:
                  scope: default
                  code: example-source-role
                roleHierarchyIndex: 50
                description: Example policy demonstrating the granting of access to
                  some resources
                applications:
                - LUSID
                policyType: Entitlement
                id:
                  scope: default
                  code: official-portfolios-read-only
                grant: Allow
                selectors:
                - idSelectorDefinition:
                    identifier:
                      scope: official
                    actions:
                    - scope: default
                      activity: Read
                      entity: Portfolio
                    - scope: default
                      activity: Aggregate
                      entity: Portfolio
                    name: access-official-scope
                    description: Allow readonly access to the 'official' scope
                for:
                - effectiveRange:
                    from: 2015-12-25T00:00:00.0000000+00:00
                    to: 2020-12-25T00:00:00.0000000+00:00
                - asAtRangeForSpec:
                    from:
                      dateTimeOffset: 2018-01-01T00:00:00.0000000+00:00
                    to:
                      value: AsAt=Latest
                if:
                - ifRequestHeaderExpression:
                    headerName: organisation.specific.group.header
                    operator: EqualsCaseInsensitive
                    value: special-group
                when:
                  activate: 2016-08-31T18:00:00.0000000+00:00
                  deactivate: 2020-08-31T18:00:00.0000000+00:00
              schema:
                items:
                  $ref: '#/components/schemas/AttachedPolicyDefinitionResponse'
                type: array
            text/json:
              example:
              - sourceRole:
                  scope: default
                  code: example-source-role
                roleHierarchyIndex: 50
                description: Example policy demonstrating the granting of access to
                  some resources
                applications:
                - LUSID
                policyType: Entitlement
                id:
                  scope: default
                  code: official-portfolios-read-only
                grant: Allow
                selectors:
                - idSelectorDefinition:
                    identifier:
                      scope: official
                    actions:
                    - scope: default
                      activity: Read
                      entity: Portfolio
                    - scope: default
                      activity: Aggregate
                      entity: Portfolio
                    name: access-official-scope
                    description: Allow readonly access to the 'official' scope
                for:
                - effectiveRange:
                    from: 2015-12-25T00:00:00.0000000+00:00
                    to: 2020-12-25T00:00:00.0000000+00:00
                - asAtRangeForSpec:
                    from:
                      dateTimeOffset: 2018-01-01T00:00:00.0000000+00:00
                    to:
                      value: AsAt=Latest
                if:
                - ifRequestHeaderExpression:
                    headerName: organisation.specific.group.header
                    operator: EqualsCaseInsensitive
                    value: special-group
                when:
                  activate: 2016-08-31T18:00:00.0000000+00:00
                  deactivate: 2020-08-31T18:00:00.0000000+00:00
              schema:
                items:
                  $ref: '#/components/schemas/AttachedPolicyDefinitionResponse'
                type: array
          description: Get policies and licences of current user
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "GetOwnPolicies: Get policies of requesting user"
      tags:
      - Policies
      x-fbn-apistatus: Stable
      x-accepts: application/json
    post:
      description: "Given a dictionary of evaluation requests (keyed by any arbitrary\
        \ correlation identifier), each will be evaluated according to the current\
        \ user's policies (deduced from the provided OAuth token)."
      operationId: Evaluate
      parameters:
      - description: Optional. The application type of the roles and policies to use
          when evaluating.
        explode: true
        in: query
        name: applications
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
        x-nullable: true
      - description: Optional. The requested AsAt date of the entitlements
        explode: true
        in: query
        name: asAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-nullable: true
      requestBody:
        content:
          application/json-patch+json:
            example:
              data-access-page-evaluation:
                request:
                  action:
                    entityCode: WebSitePage
                    scope: FINBOURNE
                    activity: SeeAdminControls
                  toEffectiveDate: 2018-12-08T13:30:00.0000000+00:00
                  toAsAt: 2018-12-31T11:00:00.0000000+00:00
                resource:
                  id:
                    scope: FINBOURNE
                    code: DataAccessPage
                  metadata:
                    RequiredLicence:
                    - provider: WebsiteAccess
                      value: FINBOURNE
            schema:
              additionalProperties:
                $ref: '#/components/schemas/EvaluationRequest'
              type: object
          application/json:
            example:
              data-access-page-evaluation:
                request:
                  action:
                    entityCode: WebSitePage
                    scope: FINBOURNE
                    activity: SeeAdminControls
                  toEffectiveDate: 2018-12-08T13:30:00.0000000+00:00
                  toAsAt: 2018-12-31T11:00:00.0000000+00:00
                resource:
                  id:
                    scope: FINBOURNE
                    code: DataAccessPage
                  metadata:
                    RequiredLicence:
                    - provider: WebsiteAccess
                      value: FINBOURNE
            schema:
              additionalProperties:
                $ref: '#/components/schemas/EvaluationRequest'
              type: object
          text/json:
            example:
              data-access-page-evaluation:
                request:
                  action:
                    entityCode: WebSitePage
                    scope: FINBOURNE
                    activity: SeeAdminControls
                  toEffectiveDate: 2018-12-08T13:30:00.0000000+00:00
                  toAsAt: 2018-12-31T11:00:00.0000000+00:00
                resource:
                  id:
                    scope: FINBOURNE
                    code: DataAccessPage
                  metadata:
                    RequiredLicence:
                    - provider: WebsiteAccess
                      value: FINBOURNE
            schema:
              additionalProperties:
                $ref: '#/components/schemas/EvaluationRequest'
              type: object
          application/*+json:
            example:
              data-access-page-evaluation:
                request:
                  action:
                    entityCode: WebSitePage
                    scope: FINBOURNE
                    activity: SeeAdminControls
                  toEffectiveDate: 2018-12-08T13:30:00.0000000+00:00
                  toAsAt: 2018-12-31T11:00:00.0000000+00:00
                resource:
                  id:
                    scope: FINBOURNE
                    code: DataAccessPage
                  metadata:
                    RequiredLicence:
                    - provider: WebsiteAccess
                      value: FINBOURNE
            schema:
              additionalProperties:
                $ref: '#/components/schemas/EvaluationRequest'
              type: object
        description: "A dictionary of evaluations, keyed using any arbitrary correlation\
          \ id (it will be returned with the response for that evaluation)."
        required: true
      responses:
        "200":
          content:
            text/plain:
              example:
                data-acces-page-evaluation:
                  result: DeniedAsLicenceRequired
                  detailedMessage: Access was denied because user is missing licence
                    'A/B'
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/EvaluationResponse'
                type: object
            application/json:
              example:
                data-acces-page-evaluation:
                  result: DeniedAsLicenceRequired
                  detailedMessage: Access was denied because user is missing licence
                    'A/B'
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/EvaluationResponse'
                type: object
            text/json:
              example:
                data-acces-page-evaluation:
                  result: DeniedAsLicenceRequired
                  detailedMessage: Access was denied because user is missing licence
                    'A/B'
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/EvaluationResponse'
                type: object
          description: Run an evaluation against the current user's entitlements
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EARLY ACCESS] Evaluate: Run one or more evaluations"
      tags:
      - Policies
      x-fbn-apistatus: EarlyAccess
      x-content-type: application/json-patch+json
      x-accepts: application/json
  /api/metadata/access/resources:
    get:
      description: Get the comprehensive set of resources that are available for access
        control
      operationId: ListAccessControlledResources
      responses:
        "200":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ResourceListOfAccessControlledResource'
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceListOfAccessControlledResource'
            text/json:
              schema:
                $ref: '#/components/schemas/ResourceListOfAccessControlledResource'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EARLY ACCESS] ListAccessControlledResources: Get resources available\
        \ for access control"
      tags:
      - Application Metadata
      x-fbn-apistatus: EarlyAccess
      x-accepts: application/json
  /api/policies:
    get:
      description: "Gets all Policies in a scope. For pagination support, use PagePolicies."
      operationId: ListPolicies
      parameters:
      - description: Optional. Will use the default scope if not provided. The requested
          scope
        explode: true
        in: query
        name: scope
        required: false
        schema:
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        style: form
      - description: Optional. The AsAt date time of the data
        explode: true
        in: query
        name: asAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-nullable: true
      - description: Optional. Order the results by these fields. Use use the '-'
          sign to denote descending order e.g. -MyFieldName
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
        x-nullable: true
      - description: "Optional. When paginating, skip this number of results"
        explode: true
        in: query
        name: start
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-nullable: true
      - description: "Optional. When paginating, limit the number of returned results\
          \ to this many."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-nullable: true
      - description: Optional. Expression to filter the result set
        explode: true
        in: query
        name: filter
        required: false
        schema:
          maxLength: 16384
          minLength: 0
          pattern: "^[\\s\\S]*$"
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              example:
              - id:
                  scope: default
                  code: official-portfolios-read-only
                description: Example policy demonstrating the granting of access to
                  some resources
                applications:
                - LUSID
                grant: Allow
                selectors:
                - idSelectorDefinition:
                    identifier:
                      scope: official
                    actions:
                    - scope: default
                      activity: Read
                      entity: Portfolio
                    - scope: default
                      activity: Aggregate
                      entity: Portfolio
                    name: access-official-scope
                    description: Allow readonly access to the 'official' scope
                for:
                - effectiveRange:
                    from: 2015-12-25T00:00:00.0000000+00:00
                    to: 2020-12-25T00:00:00.0000000+00:00
                - asAtRangeForSpec:
                    from:
                      dateTimeOffset: 2018-01-01T00:00:00.0000000+00:00
                    to:
                      value: AsAt=Latest
                if:
                - ifRequestHeaderExpression:
                    headerName: organisation.specific.group.header
                    operator: EqualsCaseInsensitive
                    value: special-group
                when:
                  activate: 2016-08-31T18:00:00.0000000+00:00
                  deactivate: 2020-08-31T18:00:00.0000000+00:00
              schema:
                items:
                  $ref: '#/components/schemas/PolicyResponse'
                type: array
            application/json:
              example:
              - id:
                  scope: default
                  code: official-portfolios-read-only
                description: Example policy demonstrating the granting of access to
                  some resources
                applications:
                - LUSID
                grant: Allow
                selectors:
                - idSelectorDefinition:
                    identifier:
                      scope: official
                    actions:
                    - scope: default
                      activity: Read
                      entity: Portfolio
                    - scope: default
                      activity: Aggregate
                      entity: Portfolio
                    name: access-official-scope
                    description: Allow readonly access to the 'official' scope
                for:
                - effectiveRange:
                    from: 2015-12-25T00:00:00.0000000+00:00
                    to: 2020-12-25T00:00:00.0000000+00:00
                - asAtRangeForSpec:
                    from:
                      dateTimeOffset: 2018-01-01T00:00:00.0000000+00:00
                    to:
                      value: AsAt=Latest
                if:
                - ifRequestHeaderExpression:
                    headerName: organisation.specific.group.header
                    operator: EqualsCaseInsensitive
                    value: special-group
                when:
                  activate: 2016-08-31T18:00:00.0000000+00:00
                  deactivate: 2020-08-31T18:00:00.0000000+00:00
              schema:
                items:
                  $ref: '#/components/schemas/PolicyResponse'
                type: array
            text/json:
              example:
              - id:
                  scope: default
                  code: official-portfolios-read-only
                description: Example policy demonstrating the granting of access to
                  some resources
                applications:
                - LUSID
                grant: Allow
                selectors:
                - idSelectorDefinition:
                    identifier:
                      scope: official
                    actions:
                    - scope: default
                      activity: Read
                      entity: Portfolio
                    - scope: default
                      activity: Aggregate
                      entity: Portfolio
                    name: access-official-scope
                    description: Allow readonly access to the 'official' scope
                for:
                - effectiveRange:
                    from: 2015-12-25T00:00:00.0000000+00:00
                    to: 2020-12-25T00:00:00.0000000+00:00
                - asAtRangeForSpec:
                    from:
                      dateTimeOffset: 2018-01-01T00:00:00.0000000+00:00
                    to:
                      value: AsAt=Latest
                if:
                - ifRequestHeaderExpression:
                    headerName: organisation.specific.group.header
                    operator: EqualsCaseInsensitive
                    value: special-group
                when:
                  activate: 2016-08-31T18:00:00.0000000+00:00
                  deactivate: 2020-08-31T18:00:00.0000000+00:00
              schema:
                items:
                  $ref: '#/components/schemas/PolicyResponse'
                type: array
          description: List Policies
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EARLY ACCESS] ListPolicies: List Policies"
      tags:
      - Policies
      x-fbn-apistatus: EarlyAccess
      x-accepts: application/json
    post:
      description: Creates a Policy
      operationId: CreatePolicy
      requestBody:
        content:
          application/json-patch+json:
            example:
              code: example-policy
              description: Example policy demonstrating their creation
              applications:
              - LUSID
              grant: Allow
              selectors:
              - idSelectorDefinition:
                  identifier:
                    scope: official
                  actions:
                  - scope: default
                    activity: Read
                    entity: Portfolio
                  - scope: default
                    activity: Aggregate
                    entity: Portfolio
                  name: access-official-scope
                  description: Allow readonly access to the 'official' scope
              for:
              - effectiveRange:
                  from: 2015-12-25T00:00:00.0000000+00:00
                  to: 2020-12-25T00:00:00.0000000+00:00
              - asAtRangeForSpec:
                  from:
                    dateTimeOffset: 2018-01-01T00:00:00.0000000+00:00
                  to:
                    value: AsAt=Latest
              if:
              - ifRequestHeaderExpression:
                  headerName: organisation.specific.group.header
                  operator: EqualsCaseInsensitive
                  value: special-group
              when:
                activate: 2016-08-31T18:00:00.0000000+00:00
                deactivate: 2020-08-31T18:00:00.0000000+00:00
            schema:
              $ref: '#/components/schemas/PolicyCreationRequest'
          application/json:
            example:
              code: example-policy
              description: Example policy demonstrating their creation
              applications:
              - LUSID
              grant: Allow
              selectors:
              - idSelectorDefinition:
                  identifier:
                    scope: official
                  actions:
                  - scope: default
                    activity: Read
                    entity: Portfolio
                  - scope: default
                    activity: Aggregate
                    entity: Portfolio
                  name: access-official-scope
                  description: Allow readonly access to the 'official' scope
              for:
              - effectiveRange:
                  from: 2015-12-25T00:00:00.0000000+00:00
                  to: 2020-12-25T00:00:00.0000000+00:00
              - asAtRangeForSpec:
                  from:
                    dateTimeOffset: 2018-01-01T00:00:00.0000000+00:00
                  to:
                    value: AsAt=Latest
              if:
              - ifRequestHeaderExpression:
                  headerName: organisation.specific.group.header
                  operator: EqualsCaseInsensitive
                  value: special-group
              when:
                activate: 2016-08-31T18:00:00.0000000+00:00
                deactivate: 2020-08-31T18:00:00.0000000+00:00
            schema:
              $ref: '#/components/schemas/PolicyCreationRequest'
          text/json:
            example:
              code: example-policy
              description: Example policy demonstrating their creation
              applications:
              - LUSID
              grant: Allow
              selectors:
              - idSelectorDefinition:
                  identifier:
                    scope: official
                  actions:
                  - scope: default
                    activity: Read
                    entity: Portfolio
                  - scope: default
                    activity: Aggregate
                    entity: Portfolio
                  name: access-official-scope
                  description: Allow readonly access to the 'official' scope
              for:
              - effectiveRange:
                  from: 2015-12-25T00:00:00.0000000+00:00
                  to: 2020-12-25T00:00:00.0000000+00:00
              - asAtRangeForSpec:
                  from:
                    dateTimeOffset: 2018-01-01T00:00:00.0000000+00:00
                  to:
                    value: AsAt=Latest
              if:
              - ifRequestHeaderExpression:
                  headerName: organisation.specific.group.header
                  operator: EqualsCaseInsensitive
                  value: special-group
              when:
                activate: 2016-08-31T18:00:00.0000000+00:00
                deactivate: 2020-08-31T18:00:00.0000000+00:00
            schema:
              $ref: '#/components/schemas/PolicyCreationRequest'
          application/*+json:
            example:
              code: example-policy
              description: Example policy demonstrating their creation
              applications:
              - LUSID
              grant: Allow
              selectors:
              - idSelectorDefinition:
                  identifier:
                    scope: official
                  actions:
                  - scope: default
                    activity: Read
                    entity: Portfolio
                  - scope: default
                    activity: Aggregate
                    entity: Portfolio
                  name: access-official-scope
                  description: Allow readonly access to the 'official' scope
              for:
              - effectiveRange:
                  from: 2015-12-25T00:00:00.0000000+00:00
                  to: 2020-12-25T00:00:00.0000000+00:00
              - asAtRangeForSpec:
                  from:
                    dateTimeOffset: 2018-01-01T00:00:00.0000000+00:00
                  to:
                    value: AsAt=Latest
              if:
              - ifRequestHeaderExpression:
                  headerName: organisation.specific.group.header
                  operator: EqualsCaseInsensitive
                  value: special-group
              when:
                activate: 2016-08-31T18:00:00.0000000+00:00
                deactivate: 2020-08-31T18:00:00.0000000+00:00
            schema:
              $ref: '#/components/schemas/PolicyCreationRequest'
        description: The definition of the Policy
        required: true
      responses:
        "201":
          content:
            text/plain:
              example:
                id:
                  scope: FINBOURNE
                  code: dataset-licence-1
                description: Access to licensed dataset
                applications:
                - LUSID
                grant: Allow
                selectors:
                - idSelectorDefinition:
                    identifier:
                      scope: FINBOURNE
                      code: dataset-licence-1
                    actions:
                    - scope: default
                      activity: Read
                      entity: Portfolio
                    name: access-dataset-1
                    description: Licence for dataset 1
                when:
                  activate: 2016-08-31T18:00:00.0000000+00:00
                  deactivate: 2020-08-31T18:00:00.0000000+00:00
              schema:
                $ref: '#/components/schemas/PolicyResponse'
            application/json:
              example:
                id:
                  scope: FINBOURNE
                  code: dataset-licence-1
                description: Access to licensed dataset
                applications:
                - LUSID
                grant: Allow
                selectors:
                - idSelectorDefinition:
                    identifier:
                      scope: FINBOURNE
                      code: dataset-licence-1
                    actions:
                    - scope: default
                      activity: Read
                      entity: Portfolio
                    name: access-dataset-1
                    description: Licence for dataset 1
                when:
                  activate: 2016-08-31T18:00:00.0000000+00:00
                  deactivate: 2020-08-31T18:00:00.0000000+00:00
              schema:
                $ref: '#/components/schemas/PolicyResponse'
            text/json:
              example:
                id:
                  scope: FINBOURNE
                  code: dataset-licence-1
                description: Access to licensed dataset
                applications:
                - LUSID
                grant: Allow
                selectors:
                - idSelectorDefinition:
                    identifier:
                      scope: FINBOURNE
                      code: dataset-licence-1
                    actions:
                    - scope: default
                      activity: Read
                      entity: Portfolio
                    name: access-dataset-1
                    description: Licence for dataset 1
                when:
                  activate: 2016-08-31T18:00:00.0000000+00:00
                  deactivate: 2020-08-31T18:00:00.0000000+00:00
              schema:
                $ref: '#/components/schemas/PolicyResponse'
          description: Created policy
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EARLY ACCESS] CreatePolicy: Create Policy"
      tags:
      - Policies
      x-fbn-apistatus: EarlyAccess
      x-content-type: application/json-patch+json
      x-accepts: application/json
  /api/policies/page:
    get:
      description: Gets all Policies with pagination support.
      operationId: PagePolicies
      parameters:
      - description: Optional. Not currently used. The AsAt date time of the data
        explode: true
        in: query
        name: asAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-nullable: true
      - description: Optional. Order the results by these fields. Use the '-' sign
          to denote descending order e.g. -MyFieldName
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          maxLength: 16384
          minLength: 1
          pattern: "^[\\s\\S]*$"
          type: string
        style: form
      - description: "Optional. 2000 if not provided. When paginating, limit the number\
          \ of returned results to this many"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          maximum: 5000
          minimum: 1
          type: integer
        style: form
        x-nullable: true
      - description: Optional. Expression to filter the result set
        explode: true
        in: query
        name: filter
        required: false
        schema:
          maxLength: 16384
          minLength: 0
          pattern: "^[\\s\\S]*$"
          type: string
        style: form
      - description: Optional. Paging token returned from a previous result
        explode: true
        in: query
        name: page
        required: false
        schema:
          maxLength: 500
          minLength: 1
          pattern: "^[a-zA-Z0-9\\+/]*={0,3}$"
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              example:
                values:
                - id:
                    scope: default
                    code: official-portfolios-read-only
                  description: Example policy demonstrating the granting of access
                    to some resources
                  applications:
                  - LUSID
                  grant: Allow
                  selectors:
                  - idSelectorDefinition:
                      identifier:
                        scope: official
                      actions:
                      - scope: default
                        activity: Read
                        entity: Portfolio
                      - scope: default
                        activity: Aggregate
                        entity: Portfolio
                      name: access-official-scope
                      description: Allow readonly access to the 'official' scope
                  for:
                  - effectiveRange:
                      from: 2015-12-25T00:00:00.0000000+00:00
                      to: 2020-12-25T00:00:00.0000000+00:00
                  - asAtRangeForSpec:
                      from:
                        dateTimeOffset: 2018-01-01T00:00:00.0000000+00:00
                      to:
                        value: AsAt=Latest
                  if:
                  - ifRequestHeaderExpression:
                      headerName: organisation.specific.group.header
                      operator: EqualsCaseInsensitive
                      value: special-group
                  when:
                    activate: 2016-08-31T18:00:00.0000000+00:00
                    deactivate: 2020-08-31T18:00:00.0000000+00:00
                href: https://example.lusid.com/access/api/policies/page?filter=&sortBy=&limit=&page=
                links: []
              schema:
                $ref: '#/components/schemas/ResourceListOfPolicyResponse'
            application/json:
              example:
                values:
                - id:
                    scope: default
                    code: official-portfolios-read-only
                  description: Example policy demonstrating the granting of access
                    to some resources
                  applications:
                  - LUSID
                  grant: Allow
                  selectors:
                  - idSelectorDefinition:
                      identifier:
                        scope: official
                      actions:
                      - scope: default
                        activity: Read
                        entity: Portfolio
                      - scope: default
                        activity: Aggregate
                        entity: Portfolio
                      name: access-official-scope
                      description: Allow readonly access to the 'official' scope
                  for:
                  - effectiveRange:
                      from: 2015-12-25T00:00:00.0000000+00:00
                      to: 2020-12-25T00:00:00.0000000+00:00
                  - asAtRangeForSpec:
                      from:
                        dateTimeOffset: 2018-01-01T00:00:00.0000000+00:00
                      to:
                        value: AsAt=Latest
                  if:
                  - ifRequestHeaderExpression:
                      headerName: organisation.specific.group.header
                      operator: EqualsCaseInsensitive
                      value: special-group
                  when:
                    activate: 2016-08-31T18:00:00.0000000+00:00
                    deactivate: 2020-08-31T18:00:00.0000000+00:00
                href: https://example.lusid.com/access/api/policies/page?filter=&sortBy=&limit=&page=
                links: []
              schema:
                $ref: '#/components/schemas/ResourceListOfPolicyResponse'
            text/json:
              example:
                values:
                - id:
                    scope: default
                    code: official-portfolios-read-only
                  description: Example policy demonstrating the granting of access
                    to some resources
                  applications:
                  - LUSID
                  grant: Allow
                  selectors:
                  - idSelectorDefinition:
                      identifier:
                        scope: official
                      actions:
                      - scope: default
                        activity: Read
                        entity: Portfolio
                      - scope: default
                        activity: Aggregate
                        entity: Portfolio
                      name: access-official-scope
                      description: Allow readonly access to the 'official' scope
                  for:
                  - effectiveRange:
                      from: 2015-12-25T00:00:00.0000000+00:00
                      to: 2020-12-25T00:00:00.0000000+00:00
                  - asAtRangeForSpec:
                      from:
                        dateTimeOffset: 2018-01-01T00:00:00.0000000+00:00
                      to:
                        value: AsAt=Latest
                  if:
                  - ifRequestHeaderExpression:
                      headerName: organisation.specific.group.header
                      operator: EqualsCaseInsensitive
                      value: special-group
                  when:
                    activate: 2016-08-31T18:00:00.0000000+00:00
                    deactivate: 2020-08-31T18:00:00.0000000+00:00
                href: https://example.lusid.com/access/api/policies/page?filter=&sortBy=&limit=&page=
                links: []
              schema:
                $ref: '#/components/schemas/ResourceListOfPolicyResponse'
          description: Requested list of Policies
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EARLY ACCESS] PagePolicies: Page Policies"
      tags:
      - Policies
      x-fbn-apistatus: EarlyAccess
      x-accepts: application/json
  /api/policies/{code}:
    delete:
      description: Deletes an identified Policy
      operationId: DeletePolicy
      parameters:
      - description: The code of the Policy
        explode: false
        in: path
        name: code
        required: true
        schema:
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        style: simple
      - description: Optional. Will use the default scope if not provided. The scope
          of the Policy
        explode: true
        in: query
        name: scope
        required: false
        schema:
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        style: form
      responses:
        "204":
          description: No Content
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EARLY ACCESS] DeletePolicy: Delete Policy"
      tags:
      - Policies
      x-fbn-apistatus: EarlyAccess
      x-accepts: application/json
    get:
      description: Gets an identified Policy
      operationId: GetPolicy
      parameters:
      - description: The code of the Policy
        explode: false
        in: path
        name: code
        required: true
        schema:
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        style: simple
      - description: Optional. The AsAt date time of the data
        explode: true
        in: query
        name: asAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-nullable: true
      - description: Optional. Will use the default scope if not provided. The scope
          of the Policy
        explode: true
        in: query
        name: scope
        required: false
        schema:
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              example:
                id:
                  scope: default
                  code: official-portfolios-read-only
                description: Example policy demonstrating the granting of access to
                  some resources
                applications:
                - LUSID
                grant: Allow
                selectors:
                - idSelectorDefinition:
                    identifier:
                      scope: official
                    actions:
                    - scope: default
                      activity: Read
                      entity: Portfolio
                    - scope: default
                      activity: Aggregate
                      entity: Portfolio
                    name: access-official-scope
                    description: Allow readonly access to the 'official' scope
                for:
                - effectiveRange:
                    from: 2015-12-25T00:00:00.0000000+00:00
                    to: 2020-12-25T00:00:00.0000000+00:00
                - asAtRangeForSpec:
                    from:
                      dateTimeOffset: 2018-01-01T00:00:00.0000000+00:00
                    to:
                      value: AsAt=Latest
                if:
                - ifRequestHeaderExpression:
                    headerName: organisation.specific.group.header
                    operator: EqualsCaseInsensitive
                    value: special-group
                when:
                  activate: 2016-08-31T18:00:00.0000000+00:00
                  deactivate: 2020-08-31T18:00:00.0000000+00:00
              schema:
                $ref: '#/components/schemas/PolicyResponse'
            application/json:
              example:
                id:
                  scope: default
                  code: official-portfolios-read-only
                description: Example policy demonstrating the granting of access to
                  some resources
                applications:
                - LUSID
                grant: Allow
                selectors:
                - idSelectorDefinition:
                    identifier:
                      scope: official
                    actions:
                    - scope: default
                      activity: Read
                      entity: Portfolio
                    - scope: default
                      activity: Aggregate
                      entity: Portfolio
                    name: access-official-scope
                    description: Allow readonly access to the 'official' scope
                for:
                - effectiveRange:
                    from: 2015-12-25T00:00:00.0000000+00:00
                    to: 2020-12-25T00:00:00.0000000+00:00
                - asAtRangeForSpec:
                    from:
                      dateTimeOffset: 2018-01-01T00:00:00.0000000+00:00
                    to:
                      value: AsAt=Latest
                if:
                - ifRequestHeaderExpression:
                    headerName: organisation.specific.group.header
                    operator: EqualsCaseInsensitive
                    value: special-group
                when:
                  activate: 2016-08-31T18:00:00.0000000+00:00
                  deactivate: 2020-08-31T18:00:00.0000000+00:00
              schema:
                $ref: '#/components/schemas/PolicyResponse'
            text/json:
              example:
                id:
                  scope: default
                  code: official-portfolios-read-only
                description: Example policy demonstrating the granting of access to
                  some resources
                applications:
                - LUSID
                grant: Allow
                selectors:
                - idSelectorDefinition:
                    identifier:
                      scope: official
                    actions:
                    - scope: default
                      activity: Read
                      entity: Portfolio
                    - scope: default
                      activity: Aggregate
                      entity: Portfolio
                    name: access-official-scope
                    description: Allow readonly access to the 'official' scope
                for:
                - effectiveRange:
                    from: 2015-12-25T00:00:00.0000000+00:00
                    to: 2020-12-25T00:00:00.0000000+00:00
                - asAtRangeForSpec:
                    from:
                      dateTimeOffset: 2018-01-01T00:00:00.0000000+00:00
                    to:
                      value: AsAt=Latest
                if:
                - ifRequestHeaderExpression:
                    headerName: organisation.specific.group.header
                    operator: EqualsCaseInsensitive
                    value: special-group
                when:
                  activate: 2016-08-31T18:00:00.0000000+00:00
                  deactivate: 2020-08-31T18:00:00.0000000+00:00
              schema:
                $ref: '#/components/schemas/PolicyResponse'
          description: Get a specific Policy
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EARLY ACCESS] GetPolicy: Get Policy"
      tags:
      - Policies
      x-fbn-apistatus: EarlyAccess
      x-accepts: application/json
    put:
      description: Updates a Policy
      operationId: UpdatePolicy
      parameters:
      - description: The code of the Policy
        explode: false
        in: path
        name: code
        required: true
        schema:
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        style: simple
      - description: Optional. Will use the default scope if not provided. The scope
          of the Policy
        explode: true
        in: query
        name: scope
        required: false
        schema:
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        style: form
      requestBody:
        content:
          application/json-patch+json:
            example:
              description: Example policy demonstrating their update
              applications:
              - LUSID
              grant: Allow
              selectors:
              - idSelectorDefinition:
                  identifier:
                    scope: official
                  actions:
                  - scope: default
                    activity: Read
                    entity: Portfolio
                  - scope: default
                    activity: Aggregate
                    entity: Portfolio
                  name: access-official-scope
                  description: Allow readonly access to the 'official' scope
              for:
              - effectiveRange:
                  from: 2015-12-25T00:00:00.0000000+00:00
                  to: 2020-12-25T00:00:00.0000000+00:00
              - asAtRangeForSpec:
                  from:
                    dateTimeOffset: 2018-01-01T00:00:00.0000000+00:00
                  to:
                    value: AsAt=Latest
              if:
              - ifRequestHeaderExpression:
                  headerName: organisation.specific.group.header
                  operator: EqualsCaseInsensitive
                  value: special-group
              when:
                activate: 2016-08-31T18:00:00.0000000+00:00
                deactivate: 2020-08-31T18:00:00.0000000+00:00
            schema:
              $ref: '#/components/schemas/PolicyUpdateRequest'
          application/json:
            example:
              description: Example policy demonstrating their update
              applications:
              - LUSID
              grant: Allow
              selectors:
              - idSelectorDefinition:
                  identifier:
                    scope: official
                  actions:
                  - scope: default
                    activity: Read
                    entity: Portfolio
                  - scope: default
                    activity: Aggregate
                    entity: Portfolio
                  name: access-official-scope
                  description: Allow readonly access to the 'official' scope
              for:
              - effectiveRange:
                  from: 2015-12-25T00:00:00.0000000+00:00
                  to: 2020-12-25T00:00:00.0000000+00:00
              - asAtRangeForSpec:
                  from:
                    dateTimeOffset: 2018-01-01T00:00:00.0000000+00:00
                  to:
                    value: AsAt=Latest
              if:
              - ifRequestHeaderExpression:
                  headerName: organisation.specific.group.header
                  operator: EqualsCaseInsensitive
                  value: special-group
              when:
                activate: 2016-08-31T18:00:00.0000000+00:00
                deactivate: 2020-08-31T18:00:00.0000000+00:00
            schema:
              $ref: '#/components/schemas/PolicyUpdateRequest'
          text/json:
            example:
              description: Example policy demonstrating their update
              applications:
              - LUSID
              grant: Allow
              selectors:
              - idSelectorDefinition:
                  identifier:
                    scope: official
                  actions:
                  - scope: default
                    activity: Read
                    entity: Portfolio
                  - scope: default
                    activity: Aggregate
                    entity: Portfolio
                  name: access-official-scope
                  description: Allow readonly access to the 'official' scope
              for:
              - effectiveRange:
                  from: 2015-12-25T00:00:00.0000000+00:00
                  to: 2020-12-25T00:00:00.0000000+00:00
              - asAtRangeForSpec:
                  from:
                    dateTimeOffset: 2018-01-01T00:00:00.0000000+00:00
                  to:
                    value: AsAt=Latest
              if:
              - ifRequestHeaderExpression:
                  headerName: organisation.specific.group.header
                  operator: EqualsCaseInsensitive
                  value: special-group
              when:
                activate: 2016-08-31T18:00:00.0000000+00:00
                deactivate: 2020-08-31T18:00:00.0000000+00:00
            schema:
              $ref: '#/components/schemas/PolicyUpdateRequest'
          application/*+json:
            example:
              description: Example policy demonstrating their update
              applications:
              - LUSID
              grant: Allow
              selectors:
              - idSelectorDefinition:
                  identifier:
                    scope: official
                  actions:
                  - scope: default
                    activity: Read
                    entity: Portfolio
                  - scope: default
                    activity: Aggregate
                    entity: Portfolio
                  name: access-official-scope
                  description: Allow readonly access to the 'official' scope
              for:
              - effectiveRange:
                  from: 2015-12-25T00:00:00.0000000+00:00
                  to: 2020-12-25T00:00:00.0000000+00:00
              - asAtRangeForSpec:
                  from:
                    dateTimeOffset: 2018-01-01T00:00:00.0000000+00:00
                  to:
                    value: AsAt=Latest
              if:
              - ifRequestHeaderExpression:
                  headerName: organisation.specific.group.header
                  operator: EqualsCaseInsensitive
                  value: special-group
              when:
                activate: 2016-08-31T18:00:00.0000000+00:00
                deactivate: 2020-08-31T18:00:00.0000000+00:00
            schema:
              $ref: '#/components/schemas/PolicyUpdateRequest'
        description: The updated definition of the Policy
        required: true
      responses:
        "200":
          content:
            text/plain:
              example:
                id:
                  scope: default
                  code: official-portfolios-read-only
                description: Example policy demonstrating the granting of access to
                  some resources
                applications:
                - LUSID
                grant: Allow
                selectors:
                - idSelectorDefinition:
                    identifier:
                      scope: official
                    actions:
                    - scope: default
                      activity: Read
                      entity: Portfolio
                    - scope: default
                      activity: Aggregate
                      entity: Portfolio
                    name: access-official-scope
                    description: Allow readonly access to the 'official' scope
                for:
                - effectiveRange:
                    from: 2015-12-25T00:00:00.0000000+00:00
                    to: 2020-12-25T00:00:00.0000000+00:00
                - asAtRangeForSpec:
                    from:
                      dateTimeOffset: 2018-01-01T00:00:00.0000000+00:00
                    to:
                      value: AsAt=Latest
                if:
                - ifRequestHeaderExpression:
                    headerName: organisation.specific.group.header
                    operator: EqualsCaseInsensitive
                    value: special-group
                when:
                  activate: 2016-08-31T18:00:00.0000000+00:00
                  deactivate: 2020-08-31T18:00:00.0000000+00:00
              schema:
                $ref: '#/components/schemas/PolicyResponse'
            application/json:
              example:
                id:
                  scope: default
                  code: official-portfolios-read-only
                description: Example policy demonstrating the granting of access to
                  some resources
                applications:
                - LUSID
                grant: Allow
                selectors:
                - idSelectorDefinition:
                    identifier:
                      scope: official
                    actions:
                    - scope: default
                      activity: Read
                      entity: Portfolio
                    - scope: default
                      activity: Aggregate
                      entity: Portfolio
                    name: access-official-scope
                    description: Allow readonly access to the 'official' scope
                for:
                - effectiveRange:
                    from: 2015-12-25T00:00:00.0000000+00:00
                    to: 2020-12-25T00:00:00.0000000+00:00
                - asAtRangeForSpec:
                    from:
                      dateTimeOffset: 2018-01-01T00:00:00.0000000+00:00
                    to:
                      value: AsAt=Latest
                if:
                - ifRequestHeaderExpression:
                    headerName: organisation.specific.group.header
                    operator: EqualsCaseInsensitive
                    value: special-group
                when:
                  activate: 2016-08-31T18:00:00.0000000+00:00
                  deactivate: 2020-08-31T18:00:00.0000000+00:00
              schema:
                $ref: '#/components/schemas/PolicyResponse'
            text/json:
              example:
                id:
                  scope: default
                  code: official-portfolios-read-only
                description: Example policy demonstrating the granting of access to
                  some resources
                applications:
                - LUSID
                grant: Allow
                selectors:
                - idSelectorDefinition:
                    identifier:
                      scope: official
                    actions:
                    - scope: default
                      activity: Read
                      entity: Portfolio
                    - scope: default
                      activity: Aggregate
                      entity: Portfolio
                    name: access-official-scope
                    description: Allow readonly access to the 'official' scope
                for:
                - effectiveRange:
                    from: 2015-12-25T00:00:00.0000000+00:00
                    to: 2020-12-25T00:00:00.0000000+00:00
                - asAtRangeForSpec:
                    from:
                      dateTimeOffset: 2018-01-01T00:00:00.0000000+00:00
                    to:
                      value: AsAt=Latest
                if:
                - ifRequestHeaderExpression:
                    headerName: organisation.specific.group.header
                    operator: EqualsCaseInsensitive
                    value: special-group
                when:
                  activate: 2016-08-31T18:00:00.0000000+00:00
                  deactivate: 2020-08-31T18:00:00.0000000+00:00
              schema:
                $ref: '#/components/schemas/PolicyResponse'
          description: Updated policy
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EARLY ACCESS] UpdatePolicy: Update Policy"
      tags:
      - Policies
      x-fbn-apistatus: EarlyAccess
      x-content-type: application/json-patch+json
      x-accepts: application/json
  /api/policycollections:
    get:
      description: "Gets all PolicyCollections in a scope. For pagination support,\
        \ use PagePolicyCollections"
      operationId: ListPolicyCollections
      parameters:
      - description: Optional. Will use the default scope if not provided. The requested
          scope
        explode: true
        in: query
        name: scope
        required: false
        schema:
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        style: form
      - description: Optional. The AsAt date time of the data
        explode: true
        in: query
        name: asAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-nullable: true
      - description: Optional. Order the results by these fields. Use use the '-'
          sign to denote descending order e.g. -MyFieldName
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
        x-nullable: true
      - description: "Optional. When paginating, skip this number of results"
        explode: true
        in: query
        name: start
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-nullable: true
      - description: "Optional. 2000 if not provided. When paginating, limit the number\
          \ of returned results to this many."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-nullable: true
      - description: Optional. Expression to filter the result set
        explode: true
        in: query
        name: filter
        required: false
        schema:
          maxLength: 16384
          minLength: 0
          pattern: "^[\\s\\S]*$"
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              example:
              - id:
                  scope: default
                  code: organisation-wide-policies
                policies:
                - scope: default
                  code: official-portfolios-read-only
                - scope: default
                  code: desk-portfolios
                policyCollections:
                - scope: default
                  code: CompanyEmployeeAccess
                description: Collection of organisation wide policies
              schema:
                items:
                  $ref: '#/components/schemas/PolicyCollectionResponse'
                type: array
            application/json:
              example:
              - id:
                  scope: default
                  code: organisation-wide-policies
                policies:
                - scope: default
                  code: official-portfolios-read-only
                - scope: default
                  code: desk-portfolios
                policyCollections:
                - scope: default
                  code: CompanyEmployeeAccess
                description: Collection of organisation wide policies
              schema:
                items:
                  $ref: '#/components/schemas/PolicyCollectionResponse'
                type: array
            text/json:
              example:
              - id:
                  scope: default
                  code: organisation-wide-policies
                policies:
                - scope: default
                  code: official-portfolios-read-only
                - scope: default
                  code: desk-portfolios
                policyCollections:
                - scope: default
                  code: CompanyEmployeeAccess
                description: Collection of organisation wide policies
              schema:
                items:
                  $ref: '#/components/schemas/PolicyCollectionResponse'
                type: array
          description: Requested list of PolicyCollections
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EARLY ACCESS] ListPolicyCollections: List PolicyCollections"
      tags:
      - Policies
      x-fbn-apistatus: EarlyAccess
      x-accepts: application/json
    post:
      description: Creates a PolicyCollection
      operationId: CreatePolicyCollection
      requestBody:
        content:
          application/json-patch+json:
            example:
              code: example-policy-collection
              policies:
              - scope: default
                code: official-portfolios-read-only
              - scope: default
                code: desk-portfolios
              metadata: {}
              policyCollections:
              - scope: default
                code: CompanyEmployeeAccess
              description: Example policy collection
            schema:
              $ref: '#/components/schemas/PolicyCollectionCreationRequest'
          application/json:
            example:
              code: example-policy-collection
              policies:
              - scope: default
                code: official-portfolios-read-only
              - scope: default
                code: desk-portfolios
              metadata: {}
              policyCollections:
              - scope: default
                code: CompanyEmployeeAccess
              description: Example policy collection
            schema:
              $ref: '#/components/schemas/PolicyCollectionCreationRequest'
          text/json:
            example:
              code: example-policy-collection
              policies:
              - scope: default
                code: official-portfolios-read-only
              - scope: default
                code: desk-portfolios
              metadata: {}
              policyCollections:
              - scope: default
                code: CompanyEmployeeAccess
              description: Example policy collection
            schema:
              $ref: '#/components/schemas/PolicyCollectionCreationRequest'
          application/*+json:
            example:
              code: example-policy-collection
              policies:
              - scope: default
                code: official-portfolios-read-only
              - scope: default
                code: desk-portfolios
              metadata: {}
              policyCollections:
              - scope: default
                code: CompanyEmployeeAccess
              description: Example policy collection
            schema:
              $ref: '#/components/schemas/PolicyCollectionCreationRequest'
        description: The definition of the PolicyCollection
        required: true
      responses:
        "201":
          content:
            text/plain:
              example:
                id:
                  scope: default
                  code: organisation-wide-policies
                policies:
                - scope: default
                  code: official-portfolios-read-only
                - scope: default
                  code: desk-portfolios
                policyCollections:
                - scope: default
                  code: CompanyEmployeeAccess
                description: Collection of organisation wide policies
              schema:
                $ref: '#/components/schemas/PolicyCollectionResponse'
            application/json:
              example:
                id:
                  scope: default
                  code: organisation-wide-policies
                policies:
                - scope: default
                  code: official-portfolios-read-only
                - scope: default
                  code: desk-portfolios
                policyCollections:
                - scope: default
                  code: CompanyEmployeeAccess
                description: Collection of organisation wide policies
              schema:
                $ref: '#/components/schemas/PolicyCollectionResponse'
            text/json:
              example:
                id:
                  scope: default
                  code: organisation-wide-policies
                policies:
                - scope: default
                  code: official-portfolios-read-only
                - scope: default
                  code: desk-portfolios
                policyCollections:
                - scope: default
                  code: CompanyEmployeeAccess
                description: Collection of organisation wide policies
              schema:
                $ref: '#/components/schemas/PolicyCollectionResponse'
          description: Created PolicyCollection
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EARLY ACCESS] CreatePolicyCollection: Create PolicyCollection"
      tags:
      - Policies
      x-fbn-apistatus: EarlyAccess
      x-content-type: application/json-patch+json
      x-accepts: application/json
  /api/policycollections/page:
    get:
      description: Gets all PolicyCollections with pagination support.
      operationId: PagePolicyCollections
      parameters:
      - description: Optional. Not currently used. The AsAt date time of the data
        explode: true
        in: query
        name: asAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-nullable: true
      - description: Optional. Order the results by these fields. Use the '-' sign
          to denote descending order e.g. -MyFieldName
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          maxLength: 16384
          minLength: 1
          pattern: "^[\\s\\S]*$"
          type: string
        style: form
      - description: "Optional. 2000 if not provided. When paginating, limit the number\
          \ of returned results to this many"
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          maximum: 5000
          minimum: 1
          type: integer
        style: form
        x-nullable: true
      - description: Optional. Expression to filter the result set
        explode: true
        in: query
        name: filter
        required: false
        schema:
          maxLength: 16384
          minLength: 0
          pattern: "^[\\s\\S]*$"
          type: string
        style: form
      - description: Optional. Paging token returned from a previous result
        explode: true
        in: query
        name: page
        required: false
        schema:
          maxLength: 500
          minLength: 1
          pattern: "^[a-zA-Z0-9\\+/]*={0,3}$"
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              example:
                values:
                - id:
                    scope: default
                    code: organisation-wide-policies
                  policies:
                  - scope: default
                    code: official-portfolios-read-only
                  - scope: default
                    code: desk-portfolios
                  policyCollections:
                  - scope: default
                    code: CompanyEmployeeAccess
                  description: Collection of organisation wide policies
                href: https://example.lusid.com/access/api/policycollections/page?filter=&sortBy=&limit=&page=
                links: []
              schema:
                $ref: '#/components/schemas/ResourceListOfPolicyCollectionResponse'
            application/json:
              example:
                values:
                - id:
                    scope: default
                    code: organisation-wide-policies
                  policies:
                  - scope: default
                    code: official-portfolios-read-only
                  - scope: default
                    code: desk-portfolios
                  policyCollections:
                  - scope: default
                    code: CompanyEmployeeAccess
                  description: Collection of organisation wide policies
                href: https://example.lusid.com/access/api/policycollections/page?filter=&sortBy=&limit=&page=
                links: []
              schema:
                $ref: '#/components/schemas/ResourceListOfPolicyCollectionResponse'
            text/json:
              example:
                values:
                - id:
                    scope: default
                    code: organisation-wide-policies
                  policies:
                  - scope: default
                    code: official-portfolios-read-only
                  - scope: default
                    code: desk-portfolios
                  policyCollections:
                  - scope: default
                    code: CompanyEmployeeAccess
                  description: Collection of organisation wide policies
                href: https://example.lusid.com/access/api/policycollections/page?filter=&sortBy=&limit=&page=
                links: []
              schema:
                $ref: '#/components/schemas/ResourceListOfPolicyCollectionResponse'
          description: Requested list of PolicyCollections
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EARLY ACCESS] PagePolicyCollections: Page PolicyCollections"
      tags:
      - Policies
      x-fbn-apistatus: EarlyAccess
      x-accepts: application/json
  /api/policycollections/{code}:
    delete:
      description: Deletes an identified PolicyCollection
      operationId: DeletePolicyCollection
      parameters:
      - description: The code of the PolicyCollection
        explode: false
        in: path
        name: code
        required: true
        schema:
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        style: simple
      - description: Optional. Will use the default scope if not provided. The scope
          of the PolicyCollection
        explode: true
        in: query
        name: scope
        required: false
        schema:
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        style: form
      responses:
        "204":
          description: No Content
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EARLY ACCESS] DeletePolicyCollection: Delete PolicyCollection"
      tags:
      - Policies
      x-fbn-apistatus: EarlyAccess
      x-accepts: application/json
    get:
      description: Gets an identified PolicyCollection
      operationId: GetPolicyCollection
      parameters:
      - description: The code of the PolicyCollection
        explode: false
        in: path
        name: code
        required: true
        schema:
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        style: simple
      - description: Optional. The AsAt date time of the data
        explode: true
        in: query
        name: asAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-nullable: true
      - description: Optional. Will use the default scope if not provided. The scope
          of the PolicyCollection
        explode: true
        in: query
        name: scope
        required: false
        schema:
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              example:
                id:
                  scope: default
                  code: organisation-wide-policies
                policies:
                - scope: default
                  code: official-portfolios-read-only
                - scope: default
                  code: desk-portfolios
                policyCollections:
                - scope: default
                  code: CompanyEmployeeAccess
                description: Collection of organisation wide policies
              schema:
                $ref: '#/components/schemas/PolicyCollectionResponse'
            application/json:
              example:
                id:
                  scope: default
                  code: organisation-wide-policies
                policies:
                - scope: default
                  code: official-portfolios-read-only
                - scope: default
                  code: desk-portfolios
                policyCollections:
                - scope: default
                  code: CompanyEmployeeAccess
                description: Collection of organisation wide policies
              schema:
                $ref: '#/components/schemas/PolicyCollectionResponse'
            text/json:
              example:
                id:
                  scope: default
                  code: organisation-wide-policies
                policies:
                - scope: default
                  code: official-portfolios-read-only
                - scope: default
                  code: desk-portfolios
                policyCollections:
                - scope: default
                  code: CompanyEmployeeAccess
                description: Collection of organisation wide policies
              schema:
                $ref: '#/components/schemas/PolicyCollectionResponse'
          description: Requested PolicyCollection
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EARLY ACCESS] GetPolicyCollection: Get PolicyCollection"
      tags:
      - Policies
      x-fbn-apistatus: EarlyAccess
      x-accepts: application/json
    put:
      description: Updates a PolicyCollection
      operationId: UpdatePolicyCollection
      parameters:
      - description: The code of the PolicyCollection
        explode: false
        in: path
        name: code
        required: true
        schema:
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        style: simple
      - description: Optional. Will use the default scope if not provided. The scope
          of the PolicyCollection
        explode: true
        in: query
        name: scope
        required: false
        schema:
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        style: form
      requestBody:
        content:
          application/json-patch+json:
            example:
              policies:
              - scope: default
                code: official-portfolios-read-only
              - scope: default
                code: desk-portfolios
              metadata: {}
              policyCollections:
              - scope: default
                code: CompanyEmployeeAccess
              description: Example policy collection
            schema:
              $ref: '#/components/schemas/PolicyCollectionUpdateRequest'
          application/json:
            example:
              policies:
              - scope: default
                code: official-portfolios-read-only
              - scope: default
                code: desk-portfolios
              metadata: {}
              policyCollections:
              - scope: default
                code: CompanyEmployeeAccess
              description: Example policy collection
            schema:
              $ref: '#/components/schemas/PolicyCollectionUpdateRequest'
          text/json:
            example:
              policies:
              - scope: default
                code: official-portfolios-read-only
              - scope: default
                code: desk-portfolios
              metadata: {}
              policyCollections:
              - scope: default
                code: CompanyEmployeeAccess
              description: Example policy collection
            schema:
              $ref: '#/components/schemas/PolicyCollectionUpdateRequest'
          application/*+json:
            example:
              policies:
              - scope: default
                code: official-portfolios-read-only
              - scope: default
                code: desk-portfolios
              metadata: {}
              policyCollections:
              - scope: default
                code: CompanyEmployeeAccess
              description: Example policy collection
            schema:
              $ref: '#/components/schemas/PolicyCollectionUpdateRequest'
        description: The updated definition of the PolicyCollection
        required: true
      responses:
        "200":
          content:
            text/plain:
              example:
                id:
                  scope: default
                  code: organisation-wide-policies
                policies:
                - scope: default
                  code: official-portfolios-read-only
                - scope: default
                  code: desk-portfolios
                policyCollections:
                - scope: default
                  code: CompanyEmployeeAccess
                description: Collection of organisation wide policies
              schema:
                $ref: '#/components/schemas/PolicyCollectionResponse'
            application/json:
              example:
                id:
                  scope: default
                  code: organisation-wide-policies
                policies:
                - scope: default
                  code: official-portfolios-read-only
                - scope: default
                  code: desk-portfolios
                policyCollections:
                - scope: default
                  code: CompanyEmployeeAccess
                description: Collection of organisation wide policies
              schema:
                $ref: '#/components/schemas/PolicyCollectionResponse'
            text/json:
              example:
                id:
                  scope: default
                  code: organisation-wide-policies
                policies:
                - scope: default
                  code: official-portfolios-read-only
                - scope: default
                  code: desk-portfolios
                policyCollections:
                - scope: default
                  code: CompanyEmployeeAccess
                description: Collection of organisation wide policies
              schema:
                $ref: '#/components/schemas/PolicyCollectionResponse'
          description: Updated PolicyCollection
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EARLY ACCESS] UpdatePolicyCollection: Update PolicyCollection"
      tags:
      - Policies
      x-fbn-apistatus: EarlyAccess
      x-content-type: application/json-patch+json
      x-accepts: application/json
  /api/policycollections/{code}/add:
    post:
      description: Add Policies and/or PolicyCollections to a PolicyCollection
      operationId: AddToPolicyCollection
      parameters:
      - description: The code of the PolicyCollection
        explode: false
        in: path
        name: code
        required: true
        schema:
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        style: simple
      - description: Optional. Will use the default scope if not provided. The scope
          of the PolicyCollection
        explode: true
        in: query
        name: scope
        required: false
        schema:
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        style: form
      requestBody:
        content:
          application/json-patch+json:
            example:
              policies:
              - scope: default
                code: official-portfolios-read-only
              - scope: default
                code: desk-portfolios
              policyCollections:
              - scope: default
                code: CompanyEmployeeAccess
            schema:
              $ref: '#/components/schemas/AddToPolicyCollectionRequest'
          application/json:
            example:
              policies:
              - scope: default
                code: official-portfolios-read-only
              - scope: default
                code: desk-portfolios
              policyCollections:
              - scope: default
                code: CompanyEmployeeAccess
            schema:
              $ref: '#/components/schemas/AddToPolicyCollectionRequest'
          text/json:
            example:
              policies:
              - scope: default
                code: official-portfolios-read-only
              - scope: default
                code: desk-portfolios
              policyCollections:
              - scope: default
                code: CompanyEmployeeAccess
            schema:
              $ref: '#/components/schemas/AddToPolicyCollectionRequest'
          application/*+json:
            example:
              policies:
              - scope: default
                code: official-portfolios-read-only
              - scope: default
                code: desk-portfolios
              policyCollections:
              - scope: default
                code: CompanyEmployeeAccess
            schema:
              $ref: '#/components/schemas/AddToPolicyCollectionRequest'
        description: Ids of the PolicyCollections and/or Policies to add to the PolicyCollection
        required: true
      responses:
        "200":
          content:
            text/plain:
              example:
                id:
                  scope: default
                  code: organisation-wide-policies
                policies:
                - scope: default
                  code: official-portfolios-read-only
                - scope: default
                  code: desk-portfolios
                policyCollections:
                - scope: default
                  code: CompanyEmployeeAccess
                description: Collection of organisation wide policies
              schema:
                $ref: '#/components/schemas/PolicyCollectionResponse'
            application/json:
              example:
                id:
                  scope: default
                  code: organisation-wide-policies
                policies:
                - scope: default
                  code: official-portfolios-read-only
                - scope: default
                  code: desk-portfolios
                policyCollections:
                - scope: default
                  code: CompanyEmployeeAccess
                description: Collection of organisation wide policies
              schema:
                $ref: '#/components/schemas/PolicyCollectionResponse'
            text/json:
              example:
                id:
                  scope: default
                  code: organisation-wide-policies
                policies:
                - scope: default
                  code: official-portfolios-read-only
                - scope: default
                  code: desk-portfolios
                policyCollections:
                - scope: default
                  code: CompanyEmployeeAccess
                description: Collection of organisation wide policies
              schema:
                $ref: '#/components/schemas/PolicyCollectionResponse'
          description: Updated PolicyCollection
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EARLY ACCESS] AddToPolicyCollection: Add To PolicyCollection"
      tags:
      - Policies
      x-fbn-apistatus: EarlyAccess
      x-content-type: application/json-patch+json
      x-accepts: application/json
  /api/policycollections/{code}/remove:
    post:
      description: Remove Policies and/or PolicyCollections from a PolicyCollection
      operationId: RemoveFromPolicyCollection
      parameters:
      - description: The code of the PolicyCollection
        explode: false
        in: path
        name: code
        required: true
        schema:
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        style: simple
      - description: Optional. Will use the default scope if not provided. The scope
          of the PolicyCollection
        explode: true
        in: query
        name: scope
        required: false
        schema:
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        style: form
      requestBody:
        content:
          application/json-patch+json:
            example:
              policies:
              - scope: default
                code: official-portfolios-read-only
              - scope: default
                code: desk-portfolios
              policyCollections:
              - scope: default
                code: CompanyEmployeeAccess
            schema:
              $ref: '#/components/schemas/RemoveFromPolicyCollectionRequest'
          application/json:
            example:
              policies:
              - scope: default
                code: official-portfolios-read-only
              - scope: default
                code: desk-portfolios
              policyCollections:
              - scope: default
                code: CompanyEmployeeAccess
            schema:
              $ref: '#/components/schemas/RemoveFromPolicyCollectionRequest'
          text/json:
            example:
              policies:
              - scope: default
                code: official-portfolios-read-only
              - scope: default
                code: desk-portfolios
              policyCollections:
              - scope: default
                code: CompanyEmployeeAccess
            schema:
              $ref: '#/components/schemas/RemoveFromPolicyCollectionRequest'
          application/*+json:
            example:
              policies:
              - scope: default
                code: official-portfolios-read-only
              - scope: default
                code: desk-portfolios
              policyCollections:
              - scope: default
                code: CompanyEmployeeAccess
            schema:
              $ref: '#/components/schemas/RemoveFromPolicyCollectionRequest'
        description: Ids of the PolicyCollections and/or Policies to remove from the
          PolicyCollection
        required: true
      responses:
        "200":
          content:
            text/plain:
              example:
                id:
                  scope: default
                  code: organisation-wide-policies
                policies:
                - scope: default
                  code: official-portfolios-read-only
                - scope: default
                  code: desk-portfolios
                policyCollections:
                - scope: default
                  code: CompanyEmployeeAccess
                description: Collection of organisation wide policies
              schema:
                $ref: '#/components/schemas/PolicyCollectionResponse'
            application/json:
              example:
                id:
                  scope: default
                  code: organisation-wide-policies
                policies:
                - scope: default
                  code: official-portfolios-read-only
                - scope: default
                  code: desk-portfolios
                policyCollections:
                - scope: default
                  code: CompanyEmployeeAccess
                description: Collection of organisation wide policies
              schema:
                $ref: '#/components/schemas/PolicyCollectionResponse'
            text/json:
              example:
                id:
                  scope: default
                  code: organisation-wide-policies
                policies:
                - scope: default
                  code: official-portfolios-read-only
                - scope: default
                  code: desk-portfolios
                policyCollections:
                - scope: default
                  code: CompanyEmployeeAccess
                description: Collection of organisation wide policies
              schema:
                $ref: '#/components/schemas/PolicyCollectionResponse'
          description: Updated PolicyCollection
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EARLY ACCESS] RemoveFromPolicyCollection: Remove From PolicyCollection"
      tags:
      - Policies
      x-fbn-apistatus: EarlyAccess
      x-content-type: application/json-patch+json
      x-accepts: application/json
  /api/roles:
    get:
      description: Gets all Roles in a scope
      operationId: ListRoles
      parameters:
      - description: Optional. Will use all scopes if not supplied. The requested
          scope
        explode: true
        in: query
        name: scope
        required: false
        schema:
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        style: form
      - description: Optional. The AsAt date time of the data
        explode: true
        in: query
        name: asAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-nullable: true
      - description: Optional. Order the results by these fields. Use use the '-'
          sign to denote descending order e.g. -MyFieldName
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
        x-nullable: true
      - description: "Optional. When paginating, skip this number of results"
        explode: true
        in: query
        name: start
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-nullable: true
      - description: "Optional. When paginating, limit the number of returned results\
          \ to this many."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
        x-nullable: true
      - description: Optional. Expression to filter the result set
        explode: true
        in: query
        name: filter
        required: false
        schema:
          maxLength: 16384
          minLength: 0
          pattern: "^[\\s\\S]*$"
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              example:
              - id:
                  scope: default
                  code: DevelopersRole
                roleHierarchyIndex: 50
                description: An example Role to identify my Developers
                resource:
                  policyIdRoleResource:
                    policies:
                    - scope: default
                      code: official-portfolios-read-only
                    - scope: default
                      code: desk-portfolios
                    policyCollections:
                    - scope: default
                      code: CompanyEmployeeAccess
                when:
                  activate: 2016-08-31T18:00:00.0000000+00:00
                  deactivate: 2020-08-31T18:00:00.0000000+00:00
                permission: Read
              schema:
                items:
                  $ref: '#/components/schemas/RoleResponse'
                type: array
            application/json:
              example:
              - id:
                  scope: default
                  code: DevelopersRole
                roleHierarchyIndex: 50
                description: An example Role to identify my Developers
                resource:
                  policyIdRoleResource:
                    policies:
                    - scope: default
                      code: official-portfolios-read-only
                    - scope: default
                      code: desk-portfolios
                    policyCollections:
                    - scope: default
                      code: CompanyEmployeeAccess
                when:
                  activate: 2016-08-31T18:00:00.0000000+00:00
                  deactivate: 2020-08-31T18:00:00.0000000+00:00
                permission: Read
              schema:
                items:
                  $ref: '#/components/schemas/RoleResponse'
                type: array
            text/json:
              example:
              - id:
                  scope: default
                  code: DevelopersRole
                roleHierarchyIndex: 50
                description: An example Role to identify my Developers
                resource:
                  policyIdRoleResource:
                    policies:
                    - scope: default
                      code: official-portfolios-read-only
                    - scope: default
                      code: desk-portfolios
                    policyCollections:
                    - scope: default
                      code: CompanyEmployeeAccess
                when:
                  activate: 2016-08-31T18:00:00.0000000+00:00
                  deactivate: 2020-08-31T18:00:00.0000000+00:00
                permission: Read
              schema:
                items:
                  $ref: '#/components/schemas/RoleResponse'
                type: array
          description: List of Roles
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EARLY ACCESS] ListRoles: List Roles"
      tags:
      - Roles
      x-fbn-apistatus: EarlyAccess
      x-accepts: application/json
    post:
      description: Creates a Role
      operationId: CreateRole
      requestBody:
        content:
          application/json-patch+json:
            example:
              code: example-organisation-role-id
              description: This is an example role to demonstrate their creation
              resource:
                policyIdRoleResource:
                  policies:
                  - scope: default
                    code: official-portfolios-read-only
                  - scope: default
                    code: desk-portfolios
                  policyCollections:
                  - scope: default
                    code: CompanyEmployeeAccess
              when:
                activate: 2016-08-31T18:00:00.0000000+00:00
                deactivate: 2020-08-31T18:00:00.0000000+00:00
            schema:
              $ref: '#/components/schemas/RoleCreationRequest'
          application/json:
            example:
              code: example-organisation-role-id
              description: This is an example role to demonstrate their creation
              resource:
                policyIdRoleResource:
                  policies:
                  - scope: default
                    code: official-portfolios-read-only
                  - scope: default
                    code: desk-portfolios
                  policyCollections:
                  - scope: default
                    code: CompanyEmployeeAccess
              when:
                activate: 2016-08-31T18:00:00.0000000+00:00
                deactivate: 2020-08-31T18:00:00.0000000+00:00
            schema:
              $ref: '#/components/schemas/RoleCreationRequest'
          text/json:
            example:
              code: example-organisation-role-id
              description: This is an example role to demonstrate their creation
              resource:
                policyIdRoleResource:
                  policies:
                  - scope: default
                    code: official-portfolios-read-only
                  - scope: default
                    code: desk-portfolios
                  policyCollections:
                  - scope: default
                    code: CompanyEmployeeAccess
              when:
                activate: 2016-08-31T18:00:00.0000000+00:00
                deactivate: 2020-08-31T18:00:00.0000000+00:00
            schema:
              $ref: '#/components/schemas/RoleCreationRequest'
          application/*+json:
            example:
              code: example-organisation-role-id
              description: This is an example role to demonstrate their creation
              resource:
                policyIdRoleResource:
                  policies:
                  - scope: default
                    code: official-portfolios-read-only
                  - scope: default
                    code: desk-portfolios
                  policyCollections:
                  - scope: default
                    code: CompanyEmployeeAccess
              when:
                activate: 2016-08-31T18:00:00.0000000+00:00
                deactivate: 2020-08-31T18:00:00.0000000+00:00
            schema:
              $ref: '#/components/schemas/RoleCreationRequest'
        description: The definition of the Role
        required: true
      responses:
        "201":
          content:
            text/plain:
              example:
                id:
                  scope: default
                  code: DevelopersRole
                roleHierarchyIndex: 50
                description: An example Role to identify my Developers
                resource:
                  policyIdRoleResource:
                    policies:
                    - scope: default
                      code: official-portfolios-read-only
                    - scope: default
                      code: desk-portfolios
                    policyCollections:
                    - scope: default
                      code: CompanyEmployeeAccess
                when:
                  activate: 2016-08-31T18:00:00.0000000+00:00
                  deactivate: 2020-08-31T18:00:00.0000000+00:00
                permission: Read
              schema:
                $ref: '#/components/schemas/RoleResponse'
            application/json:
              example:
                id:
                  scope: default
                  code: DevelopersRole
                roleHierarchyIndex: 50
                description: An example Role to identify my Developers
                resource:
                  policyIdRoleResource:
                    policies:
                    - scope: default
                      code: official-portfolios-read-only
                    - scope: default
                      code: desk-portfolios
                    policyCollections:
                    - scope: default
                      code: CompanyEmployeeAccess
                when:
                  activate: 2016-08-31T18:00:00.0000000+00:00
                  deactivate: 2020-08-31T18:00:00.0000000+00:00
                permission: Read
              schema:
                $ref: '#/components/schemas/RoleResponse'
            text/json:
              example:
                id:
                  scope: default
                  code: DevelopersRole
                roleHierarchyIndex: 50
                description: An example Role to identify my Developers
                resource:
                  policyIdRoleResource:
                    policies:
                    - scope: default
                      code: official-portfolios-read-only
                    - scope: default
                      code: desk-portfolios
                    policyCollections:
                    - scope: default
                      code: CompanyEmployeeAccess
                when:
                  activate: 2016-08-31T18:00:00.0000000+00:00
                  deactivate: 2020-08-31T18:00:00.0000000+00:00
                permission: Read
              schema:
                $ref: '#/components/schemas/RoleResponse'
          description: Created Role
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EARLY ACCESS] CreateRole: Create Role"
      tags:
      - Roles
      x-fbn-apistatus: EarlyAccess
      x-content-type: application/json-patch+json
      x-accepts: application/json
  /api/roles/{code}:
    delete:
      description: Deletes an identified Role
      operationId: DeleteRole
      parameters:
      - description: The code of the Role
        explode: false
        in: path
        name: code
        required: true
        schema:
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        style: simple
      - description: '>Optional. Will use default scope if not supplied. The scope
          of the Role'
        explode: true
        in: query
        name: scope
        required: false
        schema:
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        style: form
      responses:
        "204":
          description: No Content
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EARLY ACCESS] DeleteRole: Delete Role"
      tags:
      - Roles
      x-fbn-apistatus: EarlyAccess
      x-accepts: application/json
    get:
      description: Gets an identified Role
      operationId: GetRole
      parameters:
      - description: The code of the Role
        explode: false
        in: path
        name: code
        required: true
        schema:
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        style: simple
      - description: Optional. The AsAt date time of the data
        explode: true
        in: query
        name: asAt
        required: false
        schema:
          format: date-time
          type: string
        style: form
        x-nullable: true
      - description: Optional. Will use default scope if not supplied. The scope of
          the Role
        explode: true
        in: query
        name: scope
        required: false
        schema:
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              example:
                id:
                  scope: default
                  code: DevelopersRole
                roleHierarchyIndex: 50
                description: An example Role to identify my Developers
                resource:
                  policyIdRoleResource:
                    policies:
                    - scope: default
                      code: official-portfolios-read-only
                    - scope: default
                      code: desk-portfolios
                    policyCollections:
                    - scope: default
                      code: CompanyEmployeeAccess
                when:
                  activate: 2016-08-31T18:00:00.0000000+00:00
                  deactivate: 2020-08-31T18:00:00.0000000+00:00
                permission: Read
              schema:
                $ref: '#/components/schemas/RoleResponse'
            application/json:
              example:
                id:
                  scope: default
                  code: DevelopersRole
                roleHierarchyIndex: 50
                description: An example Role to identify my Developers
                resource:
                  policyIdRoleResource:
                    policies:
                    - scope: default
                      code: official-portfolios-read-only
                    - scope: default
                      code: desk-portfolios
                    policyCollections:
                    - scope: default
                      code: CompanyEmployeeAccess
                when:
                  activate: 2016-08-31T18:00:00.0000000+00:00
                  deactivate: 2020-08-31T18:00:00.0000000+00:00
                permission: Read
              schema:
                $ref: '#/components/schemas/RoleResponse'
            text/json:
              example:
                id:
                  scope: default
                  code: DevelopersRole
                roleHierarchyIndex: 50
                description: An example Role to identify my Developers
                resource:
                  policyIdRoleResource:
                    policies:
                    - scope: default
                      code: official-portfolios-read-only
                    - scope: default
                      code: desk-portfolios
                    policyCollections:
                    - scope: default
                      code: CompanyEmployeeAccess
                when:
                  activate: 2016-08-31T18:00:00.0000000+00:00
                  deactivate: 2020-08-31T18:00:00.0000000+00:00
                permission: Read
              schema:
                $ref: '#/components/schemas/RoleResponse'
          description: Requested Role
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EARLY ACCESS] GetRole: Get Role"
      tags:
      - Roles
      x-fbn-apistatus: EarlyAccess
      x-accepts: application/json
    put:
      description: Updates a Role
      operationId: UpdateRole
      parameters:
      - description: The code of the Role
        explode: false
        in: path
        name: code
        required: true
        schema:
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        style: simple
      - description: '>Optional. Will use default scope if not supplied. The scope
          of the Role'
        explode: true
        in: query
        name: scope
        required: false
        schema:
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        style: form
      - description: Optional. The scope of the Role. Will use default scope if not
          supplied.
        explode: true
        in: query
        name: beforeScope
        required: false
        schema:
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        style: form
      - description: Optional. The code of the Role
        explode: true
        in: query
        name: beforeCode
        required: false
        schema:
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        style: form
      - description: Optional. The scope of the Role. Will use default scope if not
          supplied.
        explode: true
        in: query
        name: afterScope
        required: false
        schema:
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        style: form
      - description: Optional. The code of the Role
        explode: true
        in: query
        name: afterCode
        required: false
        schema:
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        style: form
      requestBody:
        content:
          application/json-patch+json:
            example:
              description: This is an example role to demonstrate their update
              resource:
                policyIdRoleResource:
                  policies:
                  - scope: default
                    code: official-portfolios-read-only
                  - scope: default
                    code: desk-portfolios
                  policyCollections:
                  - scope: default
                    code: CompanyEmployeeAccess
              when:
                activate: 2016-08-31T18:00:00.0000000+00:00
                deactivate: 2020-08-31T18:00:00.0000000+00:00
            schema:
              $ref: '#/components/schemas/RoleUpdateRequest'
          application/json:
            example:
              description: This is an example role to demonstrate their update
              resource:
                policyIdRoleResource:
                  policies:
                  - scope: default
                    code: official-portfolios-read-only
                  - scope: default
                    code: desk-portfolios
                  policyCollections:
                  - scope: default
                    code: CompanyEmployeeAccess
              when:
                activate: 2016-08-31T18:00:00.0000000+00:00
                deactivate: 2020-08-31T18:00:00.0000000+00:00
            schema:
              $ref: '#/components/schemas/RoleUpdateRequest'
          text/json:
            example:
              description: This is an example role to demonstrate their update
              resource:
                policyIdRoleResource:
                  policies:
                  - scope: default
                    code: official-portfolios-read-only
                  - scope: default
                    code: desk-portfolios
                  policyCollections:
                  - scope: default
                    code: CompanyEmployeeAccess
              when:
                activate: 2016-08-31T18:00:00.0000000+00:00
                deactivate: 2020-08-31T18:00:00.0000000+00:00
            schema:
              $ref: '#/components/schemas/RoleUpdateRequest'
          application/*+json:
            example:
              description: This is an example role to demonstrate their update
              resource:
                policyIdRoleResource:
                  policies:
                  - scope: default
                    code: official-portfolios-read-only
                  - scope: default
                    code: desk-portfolios
                  policyCollections:
                  - scope: default
                    code: CompanyEmployeeAccess
              when:
                activate: 2016-08-31T18:00:00.0000000+00:00
                deactivate: 2020-08-31T18:00:00.0000000+00:00
            schema:
              $ref: '#/components/schemas/RoleUpdateRequest'
        description: The updated definition of the Role
        required: true
      responses:
        "200":
          content:
            text/plain:
              example:
                id:
                  scope: default
                  code: DevelopersRole
                roleHierarchyIndex: 50
                description: An example Role to identify my Developers
                resource:
                  policyIdRoleResource:
                    policies:
                    - scope: default
                      code: official-portfolios-read-only
                    - scope: default
                      code: desk-portfolios
                    policyCollections:
                    - scope: default
                      code: CompanyEmployeeAccess
                when:
                  activate: 2016-08-31T18:00:00.0000000+00:00
                  deactivate: 2020-08-31T18:00:00.0000000+00:00
                permission: Read
              schema:
                $ref: '#/components/schemas/RoleResponse'
            application/json:
              example:
                id:
                  scope: default
                  code: DevelopersRole
                roleHierarchyIndex: 50
                description: An example Role to identify my Developers
                resource:
                  policyIdRoleResource:
                    policies:
                    - scope: default
                      code: official-portfolios-read-only
                    - scope: default
                      code: desk-portfolios
                    policyCollections:
                    - scope: default
                      code: CompanyEmployeeAccess
                when:
                  activate: 2016-08-31T18:00:00.0000000+00:00
                  deactivate: 2020-08-31T18:00:00.0000000+00:00
                permission: Read
              schema:
                $ref: '#/components/schemas/RoleResponse'
            text/json:
              example:
                id:
                  scope: default
                  code: DevelopersRole
                roleHierarchyIndex: 50
                description: An example Role to identify my Developers
                resource:
                  policyIdRoleResource:
                    policies:
                    - scope: default
                      code: official-portfolios-read-only
                    - scope: default
                      code: desk-portfolios
                    policyCollections:
                    - scope: default
                      code: CompanyEmployeeAccess
                when:
                  activate: 2016-08-31T18:00:00.0000000+00:00
                  deactivate: 2020-08-31T18:00:00.0000000+00:00
                permission: Read
              schema:
                $ref: '#/components/schemas/RoleResponse'
          description: Updated Role
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EARLY ACCESS] UpdateRole: Update Role"
      tags:
      - Roles
      x-fbn-apistatus: EarlyAccess
      x-content-type: application/json-patch+json
      x-accepts: application/json
  /api/roles/{scope}/{code}/policycollections:
    post:
      description: Assigns policy collections to a role
      operationId: AddPolicyCollectionToRole
      parameters:
      - description: The scope of the Role
        explode: false
        in: path
        name: scope
        required: true
        schema:
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        style: simple
      - description: The code of the Role
        explode: false
        in: path
        name: code
        required: true
        schema:
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            example:
              policyCollections:
              - scope: ScopeValue
                code: SomePolCollectionCode
              - scope: ScopeValue2
                code: AnotherPolicyCollection
            schema:
              $ref: '#/components/schemas/AddPolicyCollectionToRoleRequest'
          application/json:
            example:
              policyCollections:
              - scope: ScopeValue
                code: SomePolCollectionCode
              - scope: ScopeValue2
                code: AnotherPolicyCollection
            schema:
              $ref: '#/components/schemas/AddPolicyCollectionToRoleRequest'
          text/json:
            example:
              policyCollections:
              - scope: ScopeValue
                code: SomePolCollectionCode
              - scope: ScopeValue2
                code: AnotherPolicyCollection
            schema:
              $ref: '#/components/schemas/AddPolicyCollectionToRoleRequest'
          application/*+json:
            example:
              policyCollections:
              - scope: ScopeValue
                code: SomePolCollectionCode
              - scope: ScopeValue2
                code: AnotherPolicyCollection
            schema:
              $ref: '#/components/schemas/AddPolicyCollectionToRoleRequest'
        description: The policy collections to add
        required: true
      responses:
        "200":
          content:
            text/plain:
              example:
                id:
                  scope: default
                  code: DevelopersRole
                roleHierarchyIndex: 50
                description: An example Role to identify my Developers
                resource:
                  policyIdRoleResource:
                    policies:
                    - scope: default
                      code: official-portfolios-read-only
                    - scope: default
                      code: desk-portfolios
                    policyCollections:
                    - scope: default
                      code: CompanyEmployeeAccess
                when:
                  activate: 2016-08-31T18:00:00.0000000+00:00
                  deactivate: 2020-08-31T18:00:00.0000000+00:00
                permission: Read
              schema:
                $ref: '#/components/schemas/RoleResponse'
            application/json:
              example:
                id:
                  scope: default
                  code: DevelopersRole
                roleHierarchyIndex: 50
                description: An example Role to identify my Developers
                resource:
                  policyIdRoleResource:
                    policies:
                    - scope: default
                      code: official-portfolios-read-only
                    - scope: default
                      code: desk-portfolios
                    policyCollections:
                    - scope: default
                      code: CompanyEmployeeAccess
                when:
                  activate: 2016-08-31T18:00:00.0000000+00:00
                  deactivate: 2020-08-31T18:00:00.0000000+00:00
                permission: Read
              schema:
                $ref: '#/components/schemas/RoleResponse'
            text/json:
              example:
                id:
                  scope: default
                  code: DevelopersRole
                roleHierarchyIndex: 50
                description: An example Role to identify my Developers
                resource:
                  policyIdRoleResource:
                    policies:
                    - scope: default
                      code: official-portfolios-read-only
                    - scope: default
                      code: desk-portfolios
                    policyCollections:
                    - scope: default
                      code: CompanyEmployeeAccess
                when:
                  activate: 2016-08-31T18:00:00.0000000+00:00
                  deactivate: 2020-08-31T18:00:00.0000000+00:00
                permission: Read
              schema:
                $ref: '#/components/schemas/RoleResponse'
          description: AddPolicyCollectionToRole
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EARLY ACCESS] AddPolicyCollectionToRole: Add policy collections to\
        \ a role"
      tags:
      - Roles
      x-fbn-apistatus: EarlyAccess
      x-content-type: application/json-patch+json
      x-accepts: application/json
  /api/roles/{scope}/{code}/policycollections/{policycollectionscope}/{policycollectioncode}:
    delete:
      description: Removes a policy collection from a role
      operationId: RemovePolicyCollectionFromRole
      parameters:
      - description: The scope of the Role
        explode: false
        in: path
        name: scope
        required: true
        schema:
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        style: simple
      - description: The code of the Role
        explode: false
        in: path
        name: code
        required: true
        schema:
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        style: simple
      - description: The scope of policy collection to remove from the Role
        explode: false
        in: path
        name: policycollectionscope
        required: true
        schema:
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        style: simple
      - description: The code of the policy collection to remove from the Role
        explode: false
        in: path
        name: policycollectioncode
        required: true
        schema:
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              example:
                id:
                  scope: default
                  code: DevelopersRole
                roleHierarchyIndex: 50
                description: An example Role to identify my Developers
                resource:
                  policyIdRoleResource:
                    policies:
                    - scope: default
                      code: official-portfolios-read-only
                    - scope: default
                      code: desk-portfolios
                    policyCollections:
                    - scope: default
                      code: CompanyEmployeeAccess
                when:
                  activate: 2016-08-31T18:00:00.0000000+00:00
                  deactivate: 2020-08-31T18:00:00.0000000+00:00
                permission: Read
              schema:
                $ref: '#/components/schemas/RoleResponse'
            application/json:
              example:
                id:
                  scope: default
                  code: DevelopersRole
                roleHierarchyIndex: 50
                description: An example Role to identify my Developers
                resource:
                  policyIdRoleResource:
                    policies:
                    - scope: default
                      code: official-portfolios-read-only
                    - scope: default
                      code: desk-portfolios
                    policyCollections:
                    - scope: default
                      code: CompanyEmployeeAccess
                when:
                  activate: 2016-08-31T18:00:00.0000000+00:00
                  deactivate: 2020-08-31T18:00:00.0000000+00:00
                permission: Read
              schema:
                $ref: '#/components/schemas/RoleResponse'
            text/json:
              example:
                id:
                  scope: default
                  code: DevelopersRole
                roleHierarchyIndex: 50
                description: An example Role to identify my Developers
                resource:
                  policyIdRoleResource:
                    policies:
                    - scope: default
                      code: official-portfolios-read-only
                    - scope: default
                      code: desk-portfolios
                    policyCollections:
                    - scope: default
                      code: CompanyEmployeeAccess
                when:
                  activate: 2016-08-31T18:00:00.0000000+00:00
                  deactivate: 2020-08-31T18:00:00.0000000+00:00
                permission: Read
              schema:
                $ref: '#/components/schemas/RoleResponse'
          description: RemovePolicyCollectionFromRole
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EARLY ACCESS] RemovePolicyCollectionFromRole: Remove policy collection\
        \ from role"
      tags:
      - Roles
      x-fbn-apistatus: EarlyAccess
      x-accepts: application/json
  /api/userroles:
    get:
      description: Lists all user-roles and pages.
      operationId: ListUserRoles
      parameters:
      - description: Optional. Expression to filter the result set
        explode: true
        in: query
        name: filter
        required: false
        schema:
          maxLength: 16384
          minLength: 0
          pattern: "^[\\s\\S]*$"
          type: string
        style: form
      - description: Optional. Order the results by these fields. Use the '-' sign
          to denote descending order e.g. -MyFieldName
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          maxLength: 16384
          minLength: 1
          pattern: "^[\\s\\S]*$"
          type: string
        style: form
      - description: "Optional. When paginating, limit the number of returned results\
          \ to this many."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          maximum: 5000
          minimum: 1
          type: integer
        style: form
        x-nullable: true
      - description: "Optional. Encoded page string returned from a previous search\
          \ result that will retrieve\r\n the next page of data."
        explode: true
        in: query
        name: page
        required: false
        schema:
          maxLength: 500
          minLength: 1
          pattern: "^[a-zA-Z0-9\\+/]*={0,3}$"
          type: string
        style: form
      responses:
        "200":
          content:
            text/plain:
              example:
                values:
                - resource:
                    policyIdRoleResource:
                      policies:
                      - scope: ExamplePolicyId
                        code: ExampleScope
                      policyCollections:
                      - scope: ExamplePolicyCollectionId
                        code: ExampleScope
                  id:
                    scope: default
                    code: ExampleUserId
                href: https://example.lusid.com/access/api/userroles?filter=filter&sortBy=sortBy&limit=limit&page=page
                links: []
              schema:
                $ref: '#/components/schemas/ResourceListOfUserRoleResponse'
            application/json:
              example:
                values:
                - resource:
                    policyIdRoleResource:
                      policies:
                      - scope: ExamplePolicyId
                        code: ExampleScope
                      policyCollections:
                      - scope: ExamplePolicyCollectionId
                        code: ExampleScope
                  id:
                    scope: default
                    code: ExampleUserId
                href: https://example.lusid.com/access/api/userroles?filter=filter&sortBy=sortBy&limit=limit&page=page
                links: []
              schema:
                $ref: '#/components/schemas/ResourceListOfUserRoleResponse'
            text/json:
              example:
                values:
                - resource:
                    policyIdRoleResource:
                      policies:
                      - scope: ExamplePolicyId
                        code: ExampleScope
                      policyCollections:
                      - scope: ExamplePolicyCollectionId
                        code: ExampleScope
                  id:
                    scope: default
                    code: ExampleUserId
                href: https://example.lusid.com/access/api/userroles?filter=filter&sortBy=sortBy&limit=limit&page=page
                links: []
              schema:
                $ref: '#/components/schemas/ResourceListOfUserRoleResponse'
          description: Success
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] ListUserRoles: List user-roles"
      tags:
      - User-roles
      x-fbn-apistatus: Experimental
      x-accepts: application/json
    post:
      description: Creates a new user-role.
      operationId: CreateUserRole
      requestBody:
        content:
          application/json-patch+json:
            example:
              userId: ExampleUserId
              resource:
                policies:
                - scope: ExamplePolicyId
                  code: ExampleScope
                policyCollections:
                - scope: ExamplePolicyCollectionId
                  code: ExampleScope
            schema:
              $ref: '#/components/schemas/UserRoleCreationRequest'
          application/json:
            example:
              userId: ExampleUserId
              resource:
                policies:
                - scope: ExamplePolicyId
                  code: ExampleScope
                policyCollections:
                - scope: ExamplePolicyCollectionId
                  code: ExampleScope
            schema:
              $ref: '#/components/schemas/UserRoleCreationRequest'
          text/json:
            example:
              userId: ExampleUserId
              resource:
                policies:
                - scope: ExamplePolicyId
                  code: ExampleScope
                policyCollections:
                - scope: ExamplePolicyCollectionId
                  code: ExampleScope
            schema:
              $ref: '#/components/schemas/UserRoleCreationRequest'
          application/*+json:
            example:
              userId: ExampleUserId
              resource:
                policies:
                - scope: ExamplePolicyId
                  code: ExampleScope
                policyCollections:
                - scope: ExamplePolicyCollectionId
                  code: ExampleScope
            schema:
              $ref: '#/components/schemas/UserRoleCreationRequest'
        description: Definition of the user-role to create.
        required: true
      responses:
        "200":
          content:
            text/plain:
              example:
                resource:
                  policyIdRoleResource:
                    policies:
                    - scope: ExamplePolicyId
                      code: ExampleScope
                    policyCollections:
                    - scope: ExamplePolicyCollectionId
                      code: ExampleScope
                id:
                  scope: default
                  code: ExampleUserId
              schema:
                $ref: '#/components/schemas/UserRoleResponse'
            application/json:
              example:
                resource:
                  policyIdRoleResource:
                    policies:
                    - scope: ExamplePolicyId
                      code: ExampleScope
                    policyCollections:
                    - scope: ExamplePolicyCollectionId
                      code: ExampleScope
                id:
                  scope: default
                  code: ExampleUserId
              schema:
                $ref: '#/components/schemas/UserRoleResponse'
            text/json:
              example:
                resource:
                  policyIdRoleResource:
                    policies:
                    - scope: ExamplePolicyId
                      code: ExampleScope
                    policyCollections:
                    - scope: ExamplePolicyCollectionId
                      code: ExampleScope
                id:
                  scope: default
                  code: ExampleUserId
              schema:
                $ref: '#/components/schemas/UserRoleResponse'
          description: User role that has been created.
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] CreateUserRole: Create a user-role"
      tags:
      - User-roles
      x-fbn-apistatus: Experimental
      x-content-type: application/json-patch+json
      x-accepts: application/json
  /api/userroles/{userid}:
    delete:
      description: Deletes an identified user-role.
      operationId: DeleteUserRole
      parameters:
      - description: Id of the user-role to delete.
        explode: false
        in: path
        name: userid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] DeleteUserRole: Delete a user-role"
      tags:
      - User-roles
      x-fbn-apistatus: Experimental
      x-accepts: application/json
    get:
      description: Get an identified user-role.
      operationId: GetUserRole
      parameters:
      - description: Id of the user-role to get.
        explode: false
        in: path
        name: userid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              example:
                resource:
                  policyIdRoleResource:
                    policies:
                    - scope: ExamplePolicyId
                      code: ExampleScope
                    policyCollections:
                    - scope: ExamplePolicyCollectionId
                      code: ExampleScope
                id:
                  scope: default
                  code: ExampleUserId
              schema:
                $ref: '#/components/schemas/UserRoleResponse'
            application/json:
              example:
                resource:
                  policyIdRoleResource:
                    policies:
                    - scope: ExamplePolicyId
                      code: ExampleScope
                    policyCollections:
                    - scope: ExamplePolicyCollectionId
                      code: ExampleScope
                id:
                  scope: default
                  code: ExampleUserId
              schema:
                $ref: '#/components/schemas/UserRoleResponse'
            text/json:
              example:
                resource:
                  policyIdRoleResource:
                    policies:
                    - scope: ExamplePolicyId
                      code: ExampleScope
                    policyCollections:
                    - scope: ExamplePolicyCollectionId
                      code: ExampleScope
                id:
                  scope: default
                  code: ExampleUserId
              schema:
                $ref: '#/components/schemas/UserRoleResponse'
          description: The requested user role.
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] GetUserRole: Get a user-role"
      tags:
      - User-roles
      x-fbn-apistatus: Experimental
      x-accepts: application/json
  /api/userroles/{userid}/policies:
    post:
      description: Adds a policy to a user-role.
      operationId: AddPolicyToUserRole
      parameters:
      - description: Id of the User Role to get
        explode: false
        in: path
        name: userid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            example:
              policies:
              - scope: ExampleAddPolicyScope
                code: ExampleAddPolicyCode
            schema:
              $ref: '#/components/schemas/AddPolicyToRoleRequest'
          application/json:
            example:
              policies:
              - scope: ExampleAddPolicyScope
                code: ExampleAddPolicyCode
            schema:
              $ref: '#/components/schemas/AddPolicyToRoleRequest'
          text/json:
            example:
              policies:
              - scope: ExampleAddPolicyScope
                code: ExampleAddPolicyCode
            schema:
              $ref: '#/components/schemas/AddPolicyToRoleRequest'
          application/*+json:
            example:
              policies:
              - scope: ExampleAddPolicyScope
                code: ExampleAddPolicyCode
            schema:
              $ref: '#/components/schemas/AddPolicyToRoleRequest'
        description: Dto of the policy to be added.
        required: true
      responses:
        "200":
          content:
            text/plain:
              example:
                resource:
                  policyIdRoleResource:
                    policies:
                    - scope: ExamplePolicyId
                      code: ExampleScope
                    policyCollections:
                    - scope: ExamplePolicyCollectionId
                      code: ExampleScope
                id:
                  scope: default
                  code: ExampleUserId
              schema:
                $ref: '#/components/schemas/UserRoleResponse'
            application/json:
              example:
                resource:
                  policyIdRoleResource:
                    policies:
                    - scope: ExamplePolicyId
                      code: ExampleScope
                    policyCollections:
                    - scope: ExamplePolicyCollectionId
                      code: ExampleScope
                id:
                  scope: default
                  code: ExampleUserId
              schema:
                $ref: '#/components/schemas/UserRoleResponse'
            text/json:
              example:
                resource:
                  policyIdRoleResource:
                    policies:
                    - scope: ExamplePolicyId
                      code: ExampleScope
                    policyCollections:
                    - scope: ExamplePolicyCollectionId
                      code: ExampleScope
                id:
                  scope: default
                  code: ExampleUserId
              schema:
                $ref: '#/components/schemas/UserRoleResponse'
          description: User role with added policy collection.
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] AddPolicyToUserRole: Add a policy to a user-role"
      tags:
      - User-roles
      x-fbn-apistatus: Experimental
      x-content-type: application/json-patch+json
      x-accepts: application/json
  /api/userroles/{userid}/policies/{policyScope}/{policyCode}:
    delete:
      description: Removes a policy from a user-role.
      operationId: RemovePolicyFromUserRole
      parameters:
      - description: Id of the User Role to get
        explode: false
        in: path
        name: userid
        required: true
        schema:
          type: string
        style: simple
      - description: The scope of the policy to remove from the User Role
        explode: false
        in: path
        name: policyScope
        required: true
        schema:
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        style: simple
      - description: The code of the policy to remove from the User Role
        explode: false
        in: path
        name: policyCode
        required: true
        schema:
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] RemovePolicyFromUserRole: Remove a policy from a user-role"
      tags:
      - User-roles
      x-fbn-apistatus: Experimental
      x-accepts: application/json
  /api/userroles/{userid}/policycollections:
    post:
      description: Adds a policy collection to a user-role.
      operationId: AddPolicyCollectionToUserRole
      parameters:
      - description: Id of the User Role to get
        explode: false
        in: path
        name: userid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            example:
              policyCollections:
              - scope: ExampleAddPolicyCollectionScope
                code: ExampleAddPolicyCollectionCode
            schema:
              $ref: '#/components/schemas/AddPolicyCollectionToRoleRequest'
          application/json:
            example:
              policyCollections:
              - scope: ExampleAddPolicyCollectionScope
                code: ExampleAddPolicyCollectionCode
            schema:
              $ref: '#/components/schemas/AddPolicyCollectionToRoleRequest'
          text/json:
            example:
              policyCollections:
              - scope: ExampleAddPolicyCollectionScope
                code: ExampleAddPolicyCollectionCode
            schema:
              $ref: '#/components/schemas/AddPolicyCollectionToRoleRequest'
          application/*+json:
            example:
              policyCollections:
              - scope: ExampleAddPolicyCollectionScope
                code: ExampleAddPolicyCollectionCode
            schema:
              $ref: '#/components/schemas/AddPolicyCollectionToRoleRequest'
        description: Dto of the policy collection to be added.
        required: true
      responses:
        "200":
          content:
            text/plain:
              example:
                resource:
                  policyIdRoleResource:
                    policies:
                    - scope: ExamplePolicyId
                      code: ExampleScope
                    policyCollections:
                    - scope: ExamplePolicyCollectionId
                      code: ExampleScope
                id:
                  scope: default
                  code: ExampleUserId
              schema:
                $ref: '#/components/schemas/UserRoleResponse'
            application/json:
              example:
                resource:
                  policyIdRoleResource:
                    policies:
                    - scope: ExamplePolicyId
                      code: ExampleScope
                    policyCollections:
                    - scope: ExamplePolicyCollectionId
                      code: ExampleScope
                id:
                  scope: default
                  code: ExampleUserId
              schema:
                $ref: '#/components/schemas/UserRoleResponse'
            text/json:
              example:
                resource:
                  policyIdRoleResource:
                    policies:
                    - scope: ExamplePolicyId
                      code: ExampleScope
                    policyCollections:
                    - scope: ExamplePolicyCollectionId
                      code: ExampleScope
                id:
                  scope: default
                  code: ExampleUserId
              schema:
                $ref: '#/components/schemas/UserRoleResponse'
          description: User role with added policy collection.
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] AddPolicyCollectionToUserRole: Add a policy collection\
        \ to a user-role"
      tags:
      - User-roles
      x-fbn-apistatus: Experimental
      x-content-type: application/json-patch+json
      x-accepts: application/json
  /api/userroles/{userid}/policycollections/{policyCollectionScope}/{policyCollectionCode}:
    delete:
      description: Removes a policy collection from a user-role.
      operationId: RemovePolicyCollectionFromUserRole
      parameters:
      - description: Id of the User Role to get
        explode: false
        in: path
        name: userid
        required: true
        schema:
          type: string
        style: simple
      - description: The scope of policy collection to remove from the User Role
        explode: false
        in: path
        name: policyCollectionScope
        required: true
        schema:
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        style: simple
      - description: The code of the policy collection to remove from the User Role
        explode: false
        in: path
        name: policyCollectionCode
        required: true
        schema:
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] RemovePolicyCollectionFromUserRole: Remove a policy\
        \ collection from a user-role"
      tags:
      - User-roles
      x-fbn-apistatus: Experimental
      x-accepts: application/json
  /api/userroles/{userid}/update:
    post:
      description: Updates an identified user-role.
      operationId: UpdateUserRole
      parameters:
      - description: Id of the user-role to be updated.
        explode: false
        in: path
        name: userid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json-patch+json:
            example:
              resource:
                policies:
                - scope: ExamplePolicyId
                  code: ExampleScope
                policyCollections:
                - scope: ExamplePolicyCollectionId
                  code: ExampleScope
            schema:
              $ref: '#/components/schemas/UserRoleUpdateRequest'
          application/json:
            example:
              resource:
                policies:
                - scope: ExamplePolicyId
                  code: ExampleScope
                policyCollections:
                - scope: ExamplePolicyCollectionId
                  code: ExampleScope
            schema:
              $ref: '#/components/schemas/UserRoleUpdateRequest'
          text/json:
            example:
              resource:
                policies:
                - scope: ExamplePolicyId
                  code: ExampleScope
                policyCollections:
                - scope: ExamplePolicyCollectionId
                  code: ExampleScope
            schema:
              $ref: '#/components/schemas/UserRoleUpdateRequest'
          application/*+json:
            example:
              resource:
                policies:
                - scope: ExamplePolicyId
                  code: ExampleScope
                policyCollections:
                - scope: ExamplePolicyCollectionId
                  code: ExampleScope
            schema:
              $ref: '#/components/schemas/UserRoleUpdateRequest'
        description: Definition of the update to apply to the user-role.
        required: true
      responses:
        "200":
          content:
            text/plain:
              example:
                resource:
                  policyIdRoleResource:
                    policies:
                    - scope: ExamplePolicyId
                      code: ExampleScope
                    policyCollections:
                    - scope: ExamplePolicyCollectionId
                      code: ExampleScope
                id:
                  scope: default
                  code: ExampleUserId
              schema:
                $ref: '#/components/schemas/UserRoleResponse'
            application/json:
              example:
                resource:
                  policyIdRoleResource:
                    policies:
                    - scope: ExamplePolicyId
                      code: ExampleScope
                    policyCollections:
                    - scope: ExamplePolicyCollectionId
                      code: ExampleScope
                id:
                  scope: default
                  code: ExampleUserId
              schema:
                $ref: '#/components/schemas/UserRoleResponse'
            text/json:
              example:
                resource:
                  policyIdRoleResource:
                    policies:
                    - scope: ExamplePolicyId
                      code: ExampleScope
                    policyCollections:
                    - scope: ExamplePolicyCollectionId
                      code: ExampleScope
                id:
                  scope: default
                  code: ExampleUserId
              schema:
                $ref: '#/components/schemas/UserRoleResponse'
          description: User role that has been updated.
        "400":
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            application/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
            text/json:
              schema:
                $ref: '#/components/schemas/LusidValidationProblemDetails'
          description: The details of the input related failure
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LusidProblemDetails'
          description: Error response
      security:
      - oauth2: []
      summary: "[EXPERIMENTAL] UpdateUserRole: Update a user-role"
      tags:
      - User-roles
      x-fbn-apistatus: Experimental
      x-content-type: application/json-patch+json
      x-accepts: application/json
components:
  schemas:
    AccessControlledAction:
      additionalProperties: false
      example:
        limitedSet:
        - identifier:
            key: identifier
          name: name
          description: description
          actions:
          - activity: activity
            scope: scope
            entity: entity
          - activity: activity
            scope: scope
            entity: entity
        - identifier:
            key: identifier
          name: name
          description: description
          actions:
          - activity: activity
            scope: scope
            entity: entity
          - activity: activity
            scope: scope
            entity: entity
        description: description
        action:
          activity: activity
          scope: scope
          entity: entity
        links:
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
      properties:
        description:
          minLength: 1
          type: string
        action:
          $ref: '#/components/schemas/ActionId'
        limitedSet:
          items:
            $ref: '#/components/schemas/IdSelectorDefinition'
          nullable: true
          type: array
        links:
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
          type: array
      required:
      - action
      - description
      type: object
    AccessControlledResource:
      additionalProperties: false
      example:
        application: application
        name: name
        description: description
        links:
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        actions:
        - limitedSet:
          - identifier:
              key: identifier
            name: name
            description: description
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          - identifier:
              key: identifier
            name: name
            description: description
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          description: description
          action:
            activity: activity
            scope: scope
            entity: entity
          links:
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
        - limitedSet:
          - identifier:
              key: identifier
            name: name
            description: description
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          - identifier:
              key: identifier
            name: name
            description: description
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          description: description
          action:
            activity: activity
            scope: scope
            entity: entity
          links:
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
        identifierParts:
        - displayName: displayName
          name: name
          index: 0
          description: description
          links:
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
          required: true
        - displayName: displayName
          name: name
          index: 0
          description: description
          links:
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
          required: true
      properties:
        application:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        description:
          minLength: 1
          type: string
        actions:
          items:
            $ref: '#/components/schemas/AccessControlledAction'
          type: array
        identifierParts:
          items:
            $ref: '#/components/schemas/IdentifierPartSchema'
          nullable: true
          type: array
        links:
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
          type: array
      required:
      - actions
      - description
      type: object
    ActionId:
      additionalProperties: false
      example:
        activity: activity
        scope: scope
        entity: entity
      properties:
        scope:
          maxLength: 100
          minLength: 3
          type: string
        activity:
          maxLength: 25
          minLength: 3
          type: string
        entity:
          maxLength: 25
          minLength: 3
          type: string
      required:
      - activity
      - entity
      - scope
      type: object
    AddPolicyCollectionToRoleRequest:
      additionalProperties: false
      description: Request body used to add Policy Collections to a Role
      example:
        policyCollections:
        - code: code
          scope: scope
        - code: code
          scope: scope
      properties:
        policyCollections:
          description: Identifiers of policy collections to add to a role
          items:
            $ref: '#/components/schemas/PolicyCollectionId'
          type: array
      required:
      - policyCollections
      type: object
    AddPolicyToRoleRequest:
      additionalProperties: false
      description: Request body used to add Policies to a Role
      example:
        policies:
        - code: code
          scope: scope
        - code: code
          scope: scope
      properties:
        policies:
          description: Identifiers of policies to add to a role
          items:
            $ref: '#/components/schemas/PolicyId'
          type: array
      required:
      - policies
      type: object
    AddToPolicyCollectionRequest:
      additionalProperties: false
      description: Base properties to create or update a policy collection
      example:
        policyCollections:
        - code: code
          scope: scope
        - code: code
          scope: scope
        policies:
        - code: code
          scope: scope
        - code: code
          scope: scope
      properties:
        policies:
          description: The identifiers of the Policies to be added to the collection.
          items:
            $ref: '#/components/schemas/PolicyId'
          nullable: true
          type: array
        policyCollections:
          description: The identifiers of the PolicyCollections to be added to the
            collection.
          items:
            $ref: '#/components/schemas/PolicyCollectionId'
          nullable: true
          type: array
      type: object
    AsAtPredicateContract:
      additionalProperties: false
      example:
        dateTimeOffset: 2000-01-23T04:56:07.000+00:00
        value: value
      properties:
        value:
          maxLength: 25
          minLength: 5
          nullable: true
          type: string
        dateTimeOffset:
          format: date-time
          nullable: true
          type: string
      type: object
    AsAtRangeForSpec:
      additionalProperties: false
      example:
        from:
          dateTimeOffset: 2000-01-23T04:56:07.000+00:00
          value: value
        to:
          dateTimeOffset: 2000-01-23T04:56:07.000+00:00
          value: value
      properties:
        from:
          $ref: '#/components/schemas/AsAtPredicateContract'
        to:
          $ref: '#/components/schemas/AsAtPredicateContract'
      required:
      - from
      - to
      type: object
    AsAtRelative:
      additionalProperties: false
      example:
        date: null
        unit: null
        adjustment: 6
        relativeToDateTime: null
      properties:
        date:
          $ref: '#/components/schemas/PointInTimeSpecification'
        adjustment:
          format: int32
          type: integer
        unit:
          $ref: '#/components/schemas/DateUnit'
        relativeToDateTime:
          $ref: '#/components/schemas/RelativeToDateTime'
      type: object
    AttachedPolicyDefinitionResponse:
      additionalProperties: false
      example:
        how:
          type: type
          parameters:
          - value: value
            key: key
          - value: value
            key: key
        roleHierarchyIndex: 0
        policyType: null
        for:
        - effectiveRange:
            from: 2000-01-23T04:56:07.000+00:00
            to: 2000-01-23T04:56:07.000+00:00
          asAtRangeForSpec:
            from:
              dateTimeOffset: 2000-01-23T04:56:07.000+00:00
              value: value
            to:
              dateTimeOffset: 2000-01-23T04:56:07.000+00:00
              value: value
          effectiveDateHasQuality:
            quality: null
          asAtRelative:
            date: null
            unit: null
            adjustment: 6
            relativeToDateTime: null
          effectiveDateRelative:
            date: null
            unit: null
            adjustment: 1
            relativeToDateTime: null
        - effectiveRange:
            from: 2000-01-23T04:56:07.000+00:00
            to: 2000-01-23T04:56:07.000+00:00
          asAtRangeForSpec:
            from:
              dateTimeOffset: 2000-01-23T04:56:07.000+00:00
              value: value
            to:
              dateTimeOffset: 2000-01-23T04:56:07.000+00:00
              value: value
          effectiveDateHasQuality:
            quality: null
          asAtRelative:
            date: null
            unit: null
            adjustment: 6
            relativeToDateTime: null
          effectiveDateRelative:
            date: null
            unit: null
            adjustment: 1
            relativeToDateTime: null
        description: description
        id:
          code: code
          scope: scope
        grant: null
        selectors:
        - metadataSelectorDefinition:
            name: name
            description: description
            expressions:
            - metadataKey: metadataKey
              textValue: textValue
              operator: null
            - metadataKey: metadataKey
              textValue: textValue
              operator: null
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          idSelectorDefinition:
            identifier:
              key: identifier
            name: name
            description: description
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          policySelectorDefinition:
            identityRestriction:
              key: identityRestriction
            name: name
            description: description
            restrictionSelectors:
            - null
            - null
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          matchAllSelectorDefinition:
            name: name
            description: description
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
        - metadataSelectorDefinition:
            name: name
            description: description
            expressions:
            - metadataKey: metadataKey
              textValue: textValue
              operator: null
            - metadataKey: metadataKey
              textValue: textValue
              operator: null
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          idSelectorDefinition:
            identifier:
              key: identifier
            name: name
            description: description
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          policySelectorDefinition:
            identityRestriction:
              key: identityRestriction
            name: name
            description: description
            restrictionSelectors:
            - null
            - null
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          matchAllSelectorDefinition:
            name: name
            description: description
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
        if:
        - ifFeatureChainExpression:
            selectors:
            - metadataSelectorDefinition:
                name: name
                description: description
                expressions:
                - metadataKey: metadataKey
                  textValue: textValue
                  operator: null
                - metadataKey: metadataKey
                  textValue: textValue
                  operator: null
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              idSelectorDefinition:
                identifier:
                  key: identifier
                name: name
                description: description
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              policySelectorDefinition:
                identityRestriction:
                  key: identityRestriction
                name: name
                description: description
                restrictionSelectors:
                - null
                - null
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              matchAllSelectorDefinition:
                name: name
                description: description
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
            - metadataSelectorDefinition:
                name: name
                description: description
                expressions:
                - metadataKey: metadataKey
                  textValue: textValue
                  operator: null
                - metadataKey: metadataKey
                  textValue: textValue
                  operator: null
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              idSelectorDefinition:
                identifier:
                  key: identifier
                name: name
                description: description
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              policySelectorDefinition:
                identityRestriction:
                  key: identityRestriction
                name: name
                description: description
                restrictionSelectors:
                - null
                - null
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              matchAllSelectorDefinition:
                name: name
                description: description
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
          ifIdentityScopeExpression:
            scopeName: scopeName
          ifRequestHeaderExpression:
            headerName: headerName
            value: value
            operator: null
          ifIdentityClaimExpression:
            claimType: claimType
            claimValueType: claimValueType
            claimOriginalIssuer: claimOriginalIssuer
            claimIssuer: claimIssuer
            value: value
            operator: null
        - ifFeatureChainExpression:
            selectors:
            - metadataSelectorDefinition:
                name: name
                description: description
                expressions:
                - metadataKey: metadataKey
                  textValue: textValue
                  operator: null
                - metadataKey: metadataKey
                  textValue: textValue
                  operator: null
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              idSelectorDefinition:
                identifier:
                  key: identifier
                name: name
                description: description
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              policySelectorDefinition:
                identityRestriction:
                  key: identityRestriction
                name: name
                description: description
                restrictionSelectors:
                - null
                - null
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              matchAllSelectorDefinition:
                name: name
                description: description
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
            - metadataSelectorDefinition:
                name: name
                description: description
                expressions:
                - metadataKey: metadataKey
                  textValue: textValue
                  operator: null
                - metadataKey: metadataKey
                  textValue: textValue
                  operator: null
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              idSelectorDefinition:
                identifier:
                  key: identifier
                name: name
                description: description
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              policySelectorDefinition:
                identityRestriction:
                  key: identityRestriction
                name: name
                description: description
                restrictionSelectors:
                - null
                - null
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              matchAllSelectorDefinition:
                name: name
                description: description
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
          ifIdentityScopeExpression:
            scopeName: scopeName
          ifRequestHeaderExpression:
            headerName: headerName
            value: value
            operator: null
          ifIdentityClaimExpression:
            claimType: claimType
            claimValueType: claimValueType
            claimOriginalIssuer: claimOriginalIssuer
            claimIssuer: claimIssuer
            value: value
            operator: null
        when:
          activate: 2000-01-23T04:56:07.000+00:00
          deactivate: 2000-01-23T04:56:07.000+00:00
        sourceRole:
          code: code
          scope: scope
        applications:
        - applications
        - applications
      properties:
        sourceRole:
          $ref: '#/components/schemas/RoleId'
        roleHierarchyIndex:
          format: int32
          type: integer
        description:
          nullable: true
          type: string
        applications:
          items:
            type: string
          nullable: true
          type: array
        policyType:
          $ref: '#/components/schemas/PolicyType'
        id:
          $ref: '#/components/schemas/PolicyId'
        grant:
          $ref: '#/components/schemas/Grant'
        selectors:
          items:
            $ref: '#/components/schemas/SelectorDefinition'
          nullable: true
          type: array
        for:
          items:
            $ref: '#/components/schemas/ForSpec'
          nullable: true
          type: array
        if:
          items:
            $ref: '#/components/schemas/IfExpression'
          nullable: true
          type: array
        when:
          $ref: '#/components/schemas/WhenSpec'
        how:
          $ref: '#/components/schemas/HowSpec'
      type: object
    DateQuality:
      enum:
      - Undefined
      - IsFirstDayOfAnyMonth
      - IsLastDayOfAnyMonth
      - IsBusinessDayOfAnyMonth
      - IsFirstDayOfTheCurrentMonth
      - IsLastDayOfTheCurrentMonth
      - IsBusinessDayOfTheCurrentMonth
      - IsBeforeMidday
      - IsBefore5pm
      - IsAfter5pm
      type: string
    DateUnit:
      enum:
      - Undefined
      - Minute
      - Hour
      - Day
      - BusinessDay
      - Weeks
      - Months
      - Years
      type: string
    EffectiveDateHasQuality:
      additionalProperties: false
      example:
        quality: null
      properties:
        quality:
          $ref: '#/components/schemas/DateQuality'
      type: object
    EffectiveDateRelative:
      additionalProperties: false
      example:
        date: null
        unit: null
        adjustment: 1
        relativeToDateTime: null
      properties:
        date:
          $ref: '#/components/schemas/PointInTimeSpecification'
        adjustment:
          format: int32
          type: integer
        unit:
          $ref: '#/components/schemas/DateUnit'
        relativeToDateTime:
          $ref: '#/components/schemas/RelativeToDateTime'
      type: object
    EffectiveRange:
      additionalProperties: false
      example:
        from: 2000-01-23T04:56:07.000+00:00
        to: 2000-01-23T04:56:07.000+00:00
      properties:
        from:
          format: date-time
          type: string
        to:
          format: date-time
          nullable: true
          type: string
      type: object
    EntitlementMetadata:
      additionalProperties: false
      example:
        provider: provider
        value: value
      properties:
        provider:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
      type: object
    EvaluationRequest:
      additionalProperties: false
      description: Specification for a server side evaluation of entitlement.
      example:
        request:
          fromEffectiveDate: 2000-01-23T04:56:07.000+00:00
          fromAsAt: 2000-01-23T04:56:07.000+00:00
          action:
            entityCode: entityCode
            activity: activity
            scope: scope
          toEffectiveDate: 2000-01-23T04:56:07.000+00:00
          toAsAt: 2000-01-23T04:56:07.000+00:00
        resource:
          metadata:
            key:
            - provider: provider
              value: value
            - provider: provider
              value: value
          id:
            key: id
      properties:
        request:
          $ref: '#/components/schemas/RequestDetails'
        resource:
          $ref: '#/components/schemas/ResourceDetails'
      required:
      - request
      - resource
      type: object
    EvaluationResponse:
      additionalProperties: false
      description: The result of an evaluation request
      properties:
        result:
          $ref: '#/components/schemas/EvaluationResult'
        detailedMessage:
          description: In the case of the evaluation being denied a message may be
            returned
          nullable: true
          type: string
      required:
      - result
      type: object
    EvaluationResult:
      description: The possible results of an evaluation
      enum:
      - Denied
      - Granted
      - DeniedAsLicenceRequired
      type: string
    ForSpec:
      additionalProperties: false
      example:
        effectiveRange:
          from: 2000-01-23T04:56:07.000+00:00
          to: 2000-01-23T04:56:07.000+00:00
        asAtRangeForSpec:
          from:
            dateTimeOffset: 2000-01-23T04:56:07.000+00:00
            value: value
          to:
            dateTimeOffset: 2000-01-23T04:56:07.000+00:00
            value: value
        effectiveDateHasQuality:
          quality: null
        asAtRelative:
          date: null
          unit: null
          adjustment: 6
          relativeToDateTime: null
        effectiveDateRelative:
          date: null
          unit: null
          adjustment: 1
          relativeToDateTime: null
      properties:
        asAtRangeForSpec:
          $ref: '#/components/schemas/AsAtRangeForSpec'
        asAtRelative:
          $ref: '#/components/schemas/AsAtRelative'
        effectiveDateHasQuality:
          $ref: '#/components/schemas/EffectiveDateHasQuality'
        effectiveDateRelative:
          $ref: '#/components/schemas/EffectiveDateRelative'
        effectiveRange:
          $ref: '#/components/schemas/EffectiveRange'
      type: object
    Grant:
      enum:
      - Undefined
      - Allow
      - Deny
      type: string
    HowSpec:
      additionalProperties: false
      example:
        type: type
        parameters:
        - value: value
          key: key
        - value: value
          key: key
      properties:
        type:
          nullable: true
          type: string
        parameters:
          items:
            $ref: '#/components/schemas/KeyValuePairOfStringToString'
          nullable: true
          type: array
      type: object
    IdentifierPartSchema:
      additionalProperties: false
      example:
        displayName: displayName
        name: name
        index: 0
        description: description
        links:
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        required: true
      properties:
        index:
          format: int32
          type: integer
        name:
          minLength: 1
          type: string
        displayName:
          minLength: 1
          type: string
        description:
          minLength: 1
          type: string
        required:
          type: boolean
        links:
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
          type: array
      required:
      - description
      - displayName
      - index
      - name
      - required
      type: object
    IdSelectorDefinition:
      additionalProperties: false
      example:
        identifier:
          key: identifier
        name: name
        description: description
        actions:
        - activity: activity
          scope: scope
          entity: entity
        - activity: activity
          scope: scope
          entity: entity
      properties:
        identifier:
          additionalProperties:
            type: string
          minLength: 1
          type: object
        actions:
          items:
            $ref: '#/components/schemas/ActionId'
          minItems: 1
          type: array
        name:
          maxLength: 100
          minLength: 0
          nullable: true
          type: string
        description:
          maxLength: 1024
          minLength: 0
          nullable: true
          type: string
      required:
      - actions
      - identifier
      type: object
    IfExpression:
      additionalProperties: false
      example:
        ifFeatureChainExpression:
          selectors:
          - metadataSelectorDefinition:
              name: name
              description: description
              expressions:
              - metadataKey: metadataKey
                textValue: textValue
                operator: null
              - metadataKey: metadataKey
                textValue: textValue
                operator: null
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            idSelectorDefinition:
              identifier:
                key: identifier
              name: name
              description: description
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            policySelectorDefinition:
              identityRestriction:
                key: identityRestriction
              name: name
              description: description
              restrictionSelectors:
              - null
              - null
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            matchAllSelectorDefinition:
              name: name
              description: description
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
          - metadataSelectorDefinition:
              name: name
              description: description
              expressions:
              - metadataKey: metadataKey
                textValue: textValue
                operator: null
              - metadataKey: metadataKey
                textValue: textValue
                operator: null
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            idSelectorDefinition:
              identifier:
                key: identifier
              name: name
              description: description
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            policySelectorDefinition:
              identityRestriction:
                key: identityRestriction
              name: name
              description: description
              restrictionSelectors:
              - null
              - null
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            matchAllSelectorDefinition:
              name: name
              description: description
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
        ifIdentityScopeExpression:
          scopeName: scopeName
        ifRequestHeaderExpression:
          headerName: headerName
          value: value
          operator: null
        ifIdentityClaimExpression:
          claimType: claimType
          claimValueType: claimValueType
          claimOriginalIssuer: claimOriginalIssuer
          claimIssuer: claimIssuer
          value: value
          operator: null
      properties:
        ifRequestHeaderExpression:
          $ref: '#/components/schemas/IfRequestHeaderExpression'
        ifIdentityClaimExpression:
          $ref: '#/components/schemas/IfIdentityClaimExpression'
        ifIdentityScopeExpression:
          $ref: '#/components/schemas/IfIdentityScopeExpression'
        ifFeatureChainExpression:
          $ref: '#/components/schemas/IfFeatureChainExpression'
      type: object
    IfFeatureChainExpression:
      additionalProperties: false
      example:
        selectors:
        - metadataSelectorDefinition:
            name: name
            description: description
            expressions:
            - metadataKey: metadataKey
              textValue: textValue
              operator: null
            - metadataKey: metadataKey
              textValue: textValue
              operator: null
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          idSelectorDefinition:
            identifier:
              key: identifier
            name: name
            description: description
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          policySelectorDefinition:
            identityRestriction:
              key: identityRestriction
            name: name
            description: description
            restrictionSelectors:
            - null
            - null
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          matchAllSelectorDefinition:
            name: name
            description: description
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
        - metadataSelectorDefinition:
            name: name
            description: description
            expressions:
            - metadataKey: metadataKey
              textValue: textValue
              operator: null
            - metadataKey: metadataKey
              textValue: textValue
              operator: null
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          idSelectorDefinition:
            identifier:
              key: identifier
            name: name
            description: description
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          policySelectorDefinition:
            identityRestriction:
              key: identityRestriction
            name: name
            description: description
            restrictionSelectors:
            - null
            - null
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          matchAllSelectorDefinition:
            name: name
            description: description
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
      properties:
        selectors:
          items:
            $ref: '#/components/schemas/SelectorDefinition'
          type: array
      required:
      - selectors
      type: object
    IfIdentityClaimExpression:
      additionalProperties: false
      example:
        claimType: claimType
        claimValueType: claimValueType
        claimOriginalIssuer: claimOriginalIssuer
        claimIssuer: claimIssuer
        value: value
        operator: null
      properties:
        claimType:
          minLength: 1
          type: string
        claimValueType:
          nullable: true
          type: string
        claimIssuer:
          nullable: true
          type: string
        claimOriginalIssuer:
          nullable: true
          type: string
        operator:
          $ref: '#/components/schemas/TextOperator'
        value:
          nullable: true
          type: string
      required:
      - claimType
      - operator
      type: object
    IfIdentityScopeExpression:
      additionalProperties: false
      example:
        scopeName: scopeName
      properties:
        scopeName:
          minLength: 1
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
      required:
      - scopeName
      type: object
    IfRequestHeaderExpression:
      additionalProperties: false
      example:
        headerName: headerName
        value: value
        operator: null
      properties:
        headerName:
          maxLength: 1024
          minLength: 1
          type: string
        operator:
          $ref: '#/components/schemas/TextOperator'
        value:
          maxLength: 4096
          minLength: 0
          nullable: true
          type: string
      required:
      - headerName
      - operator
      type: object
    KeyValuePairOfStringToString:
      additionalProperties: false
      example:
        value: value
        key: key
      properties:
        key:
          nullable: true
          type: string
        value:
          nullable: true
          type: string
      type: object
    Link:
      additionalProperties: false
      example:
        method: method
        description: description
        href: https://openapi-generator.tech
        relation: relation
      properties:
        relation:
          type: string
        href:
          format: uri
          type: string
        description:
          nullable: true
          type: string
        method:
          type: string
      required:
      - href
      - method
      - relation
      type: object
    LusidProblemDetails:
      additionalProperties: false
      properties:
        name:
          minLength: 1
          type: string
        errorDetails:
          items:
            additionalProperties:
              type: string
            type: object
          nullable: true
          type: array
        code:
          format: int32
          type: integer
        type:
          nullable: true
          type: string
        title:
          nullable: true
          type: string
        status:
          format: int32
          nullable: true
          type: integer
        detail:
          nullable: true
          type: string
        instance:
          nullable: true
          type: string
      required:
      - code
      - name
      type: object
    LusidValidationProblemDetails:
      additionalProperties: false
      properties:
        name:
          minLength: 1
          type: string
        errorDetails:
          items:
            additionalProperties:
              type: string
            type: object
          nullable: true
          type: array
        code:
          format: int32
          type: integer
        errors:
          additionalProperties:
            items:
              type: string
            type: array
          nullable: true
          type: object
        type:
          nullable: true
          type: string
        title:
          nullable: true
          type: string
        status:
          format: int32
          nullable: true
          type: integer
        detail:
          nullable: true
          type: string
        instance:
          nullable: true
          type: string
      required:
      - code
      - name
      type: object
    MatchAllSelectorDefinition:
      additionalProperties: false
      example:
        name: name
        description: description
        actions:
        - activity: activity
          scope: scope
          entity: entity
        - activity: activity
          scope: scope
          entity: entity
      properties:
        actions:
          items:
            $ref: '#/components/schemas/ActionId'
          minItems: 1
          type: array
        name:
          maxLength: 100
          minLength: 0
          nullable: true
          type: string
        description:
          maxLength: 1024
          minLength: 0
          nullable: true
          type: string
      required:
      - actions
      type: object
    MetadataExpression:
      additionalProperties: false
      example:
        metadataKey: metadataKey
        textValue: textValue
        operator: null
      properties:
        metadataKey:
          minLength: 1
          type: string
        operator:
          $ref: '#/components/schemas/Operator'
        textValue:
          nullable: true
          type: string
      required:
      - metadataKey
      - operator
      type: object
    MetadataSelectorDefinition:
      additionalProperties: false
      example:
        name: name
        description: description
        expressions:
        - metadataKey: metadataKey
          textValue: textValue
          operator: null
        - metadataKey: metadataKey
          textValue: textValue
          operator: null
        actions:
        - activity: activity
          scope: scope
          entity: entity
        - activity: activity
          scope: scope
          entity: entity
      properties:
        expressions:
          items:
            $ref: '#/components/schemas/MetadataExpression'
          minItems: 1
          type: array
        actions:
          items:
            $ref: '#/components/schemas/ActionId'
          minItems: 1
          type: array
        name:
          maxLength: 100
          minLength: 0
          nullable: true
          type: string
        description:
          maxLength: 1024
          minLength: 0
          nullable: true
          type: string
      required:
      - actions
      - expressions
      type: object
    NonTransitiveSupervisorRoleResource:
      additionalProperties: false
      example:
        roles:
        - key: roles
        - key: roles
      properties:
        roles:
          items:
            additionalProperties:
              type: string
            type: object
          minItems: 1
          type: array
      required:
      - roles
      type: object
    Operator:
      enum:
      - Undefined
      - Equals
      - NotEquals
      - GreaterThan
      - GreaterThanOrEqualTo
      - LessThan
      - LessThanOrEqualTo
      - In
      type: string
    PointInTimeSpecification:
      enum:
      - Undefined
      - Now
      - FirstOfMonth
      - FirstBusinessDayOfTheMonth
      - LastDayOfTheMonth
      - LastBusinessDayOfMonth
      - FirstDayOfYear
      - LastDayOfYear
      type: string
    PolicyCollectionCreationRequest:
      additionalProperties: false
      description: "Create a PolicyCollection, a logical group of Policies or other\
        \ PolicyCollections"
      example:
        metadata:
          key:
          - provider: provider
            value: value
          - provider: provider
            value: value
        code: code
        policyCollections:
        - code: code
          scope: scope
        - code: code
          scope: scope
        policies:
        - code: code
          scope: scope
        - code: code
          scope: scope
        description: description
      properties:
        code:
          description: The identifier for the PolicyCollection being created
          maxLength: 100
          minLength: 3
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        policies:
          description: The identifiers of the Policies in this collection
          items:
            $ref: '#/components/schemas/PolicyId'
          nullable: true
          type: array
        metadata:
          additionalProperties:
            items:
              $ref: '#/components/schemas/EntitlementMetadata'
            nullable: true
            type: array
          description: Any relevant metadata associated with this resource for controlling
            access to this resource
          nullable: true
          type: object
        policyCollections:
          description: The identifiers of the PolicyCollections in this collection
          items:
            $ref: '#/components/schemas/PolicyCollectionId'
          nullable: true
          type: array
        description:
          description: A description of this policy collection
          maxLength: 1024
          minLength: 0
          nullable: true
          type: string
      required:
      - code
      type: object
    PolicyCollectionId:
      additionalProperties: false
      example:
        code: code
        scope: scope
      properties:
        scope:
          maxLength: 100
          minLength: 3
          nullable: true
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        code:
          maxLength: 100
          minLength: 3
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
      required:
      - code
      type: object
    PolicyCollectionResponse:
      additionalProperties: false
      description: A PolicyCollection encapsulating one or more Policies and PolicyCollections
      example:
        policyCollections:
        - code: code
          scope: scope
        - code: code
          scope: scope
        policies:
        - code: code
          scope: scope
        - code: code
          scope: scope
        description: description
        links:
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        id:
          code: code
          scope: scope
      properties:
        id:
          $ref: '#/components/schemas/PolicyCollectionId'
        policies:
          description: The identifiers of the Policies in this collection
          items:
            $ref: '#/components/schemas/PolicyId'
          nullable: true
          type: array
        policyCollections:
          description: The identifiers of the PolicyCollections in this collection
          items:
            $ref: '#/components/schemas/PolicyCollectionId'
          nullable: true
          type: array
        description:
          description: A description of this policy collection
          nullable: true
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
          type: array
      type: object
    PolicyCollectionUpdateRequest:
      additionalProperties: false
      description: Update an existing PolicyCollection
      example:
        metadata:
          key:
          - provider: provider
            value: value
          - provider: provider
            value: value
        policyCollections:
        - code: code
          scope: scope
        - code: code
          scope: scope
        policies:
        - code: code
          scope: scope
        - code: code
          scope: scope
        description: description
      properties:
        policies:
          description: The identifiers of the Policies in this collection
          items:
            $ref: '#/components/schemas/PolicyId'
          nullable: true
          type: array
        metadata:
          additionalProperties:
            items:
              $ref: '#/components/schemas/EntitlementMetadata'
            nullable: true
            type: array
          description: Any relevant metadata associated with this resource for controlling
            access to this resource
          nullable: true
          type: object
        policyCollections:
          description: The identifiers of the PolicyCollections in this collection
          items:
            $ref: '#/components/schemas/PolicyCollectionId'
          nullable: true
          type: array
        description:
          description: A description of this policy collection
          maxLength: 1024
          minLength: 0
          nullable: true
          type: string
      type: object
    PolicyCreationRequest:
      additionalProperties: false
      description: Request to create a policy
      example:
        how:
          type: type
          parameters:
          - value: value
            key: key
          - value: value
            key: key
        code: code
        for:
        - effectiveRange:
            from: 2000-01-23T04:56:07.000+00:00
            to: 2000-01-23T04:56:07.000+00:00
          asAtRangeForSpec:
            from:
              dateTimeOffset: 2000-01-23T04:56:07.000+00:00
              value: value
            to:
              dateTimeOffset: 2000-01-23T04:56:07.000+00:00
              value: value
          effectiveDateHasQuality:
            quality: null
          asAtRelative:
            date: null
            unit: null
            adjustment: 6
            relativeToDateTime: null
          effectiveDateRelative:
            date: null
            unit: null
            adjustment: 1
            relativeToDateTime: null
        - effectiveRange:
            from: 2000-01-23T04:56:07.000+00:00
            to: 2000-01-23T04:56:07.000+00:00
          asAtRangeForSpec:
            from:
              dateTimeOffset: 2000-01-23T04:56:07.000+00:00
              value: value
            to:
              dateTimeOffset: 2000-01-23T04:56:07.000+00:00
              value: value
          effectiveDateHasQuality:
            quality: null
          asAtRelative:
            date: null
            unit: null
            adjustment: 6
            relativeToDateTime: null
          effectiveDateRelative:
            date: null
            unit: null
            adjustment: 1
            relativeToDateTime: null
        description: description
        grant: null
        selectors:
        - metadataSelectorDefinition:
            name: name
            description: description
            expressions:
            - metadataKey: metadataKey
              textValue: textValue
              operator: null
            - metadataKey: metadataKey
              textValue: textValue
              operator: null
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          idSelectorDefinition:
            identifier:
              key: identifier
            name: name
            description: description
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          policySelectorDefinition:
            identityRestriction:
              key: identityRestriction
            name: name
            description: description
            restrictionSelectors:
            - null
            - null
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          matchAllSelectorDefinition:
            name: name
            description: description
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
        - metadataSelectorDefinition:
            name: name
            description: description
            expressions:
            - metadataKey: metadataKey
              textValue: textValue
              operator: null
            - metadataKey: metadataKey
              textValue: textValue
              operator: null
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          idSelectorDefinition:
            identifier:
              key: identifier
            name: name
            description: description
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          policySelectorDefinition:
            identityRestriction:
              key: identityRestriction
            name: name
            description: description
            restrictionSelectors:
            - null
            - null
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          matchAllSelectorDefinition:
            name: name
            description: description
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
        if:
        - ifFeatureChainExpression:
            selectors:
            - metadataSelectorDefinition:
                name: name
                description: description
                expressions:
                - metadataKey: metadataKey
                  textValue: textValue
                  operator: null
                - metadataKey: metadataKey
                  textValue: textValue
                  operator: null
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              idSelectorDefinition:
                identifier:
                  key: identifier
                name: name
                description: description
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              policySelectorDefinition:
                identityRestriction:
                  key: identityRestriction
                name: name
                description: description
                restrictionSelectors:
                - null
                - null
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              matchAllSelectorDefinition:
                name: name
                description: description
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
            - metadataSelectorDefinition:
                name: name
                description: description
                expressions:
                - metadataKey: metadataKey
                  textValue: textValue
                  operator: null
                - metadataKey: metadataKey
                  textValue: textValue
                  operator: null
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              idSelectorDefinition:
                identifier:
                  key: identifier
                name: name
                description: description
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              policySelectorDefinition:
                identityRestriction:
                  key: identityRestriction
                name: name
                description: description
                restrictionSelectors:
                - null
                - null
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              matchAllSelectorDefinition:
                name: name
                description: description
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
          ifIdentityScopeExpression:
            scopeName: scopeName
          ifRequestHeaderExpression:
            headerName: headerName
            value: value
            operator: null
          ifIdentityClaimExpression:
            claimType: claimType
            claimValueType: claimValueType
            claimOriginalIssuer: claimOriginalIssuer
            claimIssuer: claimIssuer
            value: value
            operator: null
        - ifFeatureChainExpression:
            selectors:
            - metadataSelectorDefinition:
                name: name
                description: description
                expressions:
                - metadataKey: metadataKey
                  textValue: textValue
                  operator: null
                - metadataKey: metadataKey
                  textValue: textValue
                  operator: null
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              idSelectorDefinition:
                identifier:
                  key: identifier
                name: name
                description: description
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              policySelectorDefinition:
                identityRestriction:
                  key: identityRestriction
                name: name
                description: description
                restrictionSelectors:
                - null
                - null
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              matchAllSelectorDefinition:
                name: name
                description: description
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
            - metadataSelectorDefinition:
                name: name
                description: description
                expressions:
                - metadataKey: metadataKey
                  textValue: textValue
                  operator: null
                - metadataKey: metadataKey
                  textValue: textValue
                  operator: null
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              idSelectorDefinition:
                identifier:
                  key: identifier
                name: name
                description: description
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              policySelectorDefinition:
                identityRestriction:
                  key: identityRestriction
                name: name
                description: description
                restrictionSelectors:
                - null
                - null
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              matchAllSelectorDefinition:
                name: name
                description: description
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
          ifIdentityScopeExpression:
            scopeName: scopeName
          ifRequestHeaderExpression:
            headerName: headerName
            value: value
            operator: null
          ifIdentityClaimExpression:
            claimType: claimType
            claimValueType: claimValueType
            claimOriginalIssuer: claimOriginalIssuer
            claimIssuer: claimIssuer
            value: value
            operator: null
        when:
          activate: 2000-01-23T04:56:07.000+00:00
          deactivate: 2000-01-23T04:56:07.000+00:00
        applications:
        - applications
        - applications
      properties:
        code:
          description: Code of the policy being created
          maxLength: 100
          minLength: 3
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        description:
          description: Description of what the policy will be used for
          maxLength: 1024
          minLength: 0
          nullable: true
          type: string
        applications:
          description: Applications this policy is used with
          items:
            type: string
          nullable: true
          type: array
        grant:
          $ref: '#/components/schemas/Grant'
        selectors:
          description: Selectors that identify what resources this policy qualifies
            for
          items:
            $ref: '#/components/schemas/SelectorDefinition'
          type: array
        for:
          description: '"For Specification" for when the policy is to be applied'
          items:
            $ref: '#/components/schemas/ForSpec'
          nullable: true
          type: array
        if:
          description: '"If Specification" for when the policy is to be applied'
          items:
            $ref: '#/components/schemas/IfExpression'
          nullable: true
          type: array
        when:
          $ref: '#/components/schemas/WhenSpec'
        how:
          $ref: '#/components/schemas/HowSpec'
      required:
      - code
      - grant
      - selectors
      - when
      type: object
    PolicyId:
      additionalProperties: false
      example:
        code: code
        scope: scope
      properties:
        scope:
          maxLength: 100
          minLength: 3
          nullable: true
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        code:
          maxLength: 100
          minLength: 3
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
      required:
      - code
      type: object
    PolicyIdRoleResource:
      additionalProperties: false
      example:
        policyCollections:
        - code: code
          scope: scope
        - code: code
          scope: scope
        policies:
        - code: code
          scope: scope
        - code: code
          scope: scope
      properties:
        policies:
          items:
            $ref: '#/components/schemas/PolicyId'
          nullable: true
          type: array
        policyCollections:
          items:
            $ref: '#/components/schemas/PolicyCollectionId'
          nullable: true
          type: array
      type: object
    PolicyResponse:
      additionalProperties: false
      description: Response object from the policy API
      example:
        how:
          type: type
          parameters:
          - value: value
            key: key
          - value: value
            key: key
        for:
        - effectiveRange:
            from: 2000-01-23T04:56:07.000+00:00
            to: 2000-01-23T04:56:07.000+00:00
          asAtRangeForSpec:
            from:
              dateTimeOffset: 2000-01-23T04:56:07.000+00:00
              value: value
            to:
              dateTimeOffset: 2000-01-23T04:56:07.000+00:00
              value: value
          effectiveDateHasQuality:
            quality: null
          asAtRelative:
            date: null
            unit: null
            adjustment: 6
            relativeToDateTime: null
          effectiveDateRelative:
            date: null
            unit: null
            adjustment: 1
            relativeToDateTime: null
        - effectiveRange:
            from: 2000-01-23T04:56:07.000+00:00
            to: 2000-01-23T04:56:07.000+00:00
          asAtRangeForSpec:
            from:
              dateTimeOffset: 2000-01-23T04:56:07.000+00:00
              value: value
            to:
              dateTimeOffset: 2000-01-23T04:56:07.000+00:00
              value: value
          effectiveDateHasQuality:
            quality: null
          asAtRelative:
            date: null
            unit: null
            adjustment: 6
            relativeToDateTime: null
          effectiveDateRelative:
            date: null
            unit: null
            adjustment: 1
            relativeToDateTime: null
        description: description
        links:
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        id:
          code: code
          scope: scope
        grant: null
        selectors:
        - metadataSelectorDefinition:
            name: name
            description: description
            expressions:
            - metadataKey: metadataKey
              textValue: textValue
              operator: null
            - metadataKey: metadataKey
              textValue: textValue
              operator: null
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          idSelectorDefinition:
            identifier:
              key: identifier
            name: name
            description: description
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          policySelectorDefinition:
            identityRestriction:
              key: identityRestriction
            name: name
            description: description
            restrictionSelectors:
            - null
            - null
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          matchAllSelectorDefinition:
            name: name
            description: description
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
        - metadataSelectorDefinition:
            name: name
            description: description
            expressions:
            - metadataKey: metadataKey
              textValue: textValue
              operator: null
            - metadataKey: metadataKey
              textValue: textValue
              operator: null
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          idSelectorDefinition:
            identifier:
              key: identifier
            name: name
            description: description
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          policySelectorDefinition:
            identityRestriction:
              key: identityRestriction
            name: name
            description: description
            restrictionSelectors:
            - null
            - null
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          matchAllSelectorDefinition:
            name: name
            description: description
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
        if:
        - ifFeatureChainExpression:
            selectors:
            - metadataSelectorDefinition:
                name: name
                description: description
                expressions:
                - metadataKey: metadataKey
                  textValue: textValue
                  operator: null
                - metadataKey: metadataKey
                  textValue: textValue
                  operator: null
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              idSelectorDefinition:
                identifier:
                  key: identifier
                name: name
                description: description
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              policySelectorDefinition:
                identityRestriction:
                  key: identityRestriction
                name: name
                description: description
                restrictionSelectors:
                - null
                - null
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              matchAllSelectorDefinition:
                name: name
                description: description
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
            - metadataSelectorDefinition:
                name: name
                description: description
                expressions:
                - metadataKey: metadataKey
                  textValue: textValue
                  operator: null
                - metadataKey: metadataKey
                  textValue: textValue
                  operator: null
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              idSelectorDefinition:
                identifier:
                  key: identifier
                name: name
                description: description
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              policySelectorDefinition:
                identityRestriction:
                  key: identityRestriction
                name: name
                description: description
                restrictionSelectors:
                - null
                - null
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              matchAllSelectorDefinition:
                name: name
                description: description
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
          ifIdentityScopeExpression:
            scopeName: scopeName
          ifRequestHeaderExpression:
            headerName: headerName
            value: value
            operator: null
          ifIdentityClaimExpression:
            claimType: claimType
            claimValueType: claimValueType
            claimOriginalIssuer: claimOriginalIssuer
            claimIssuer: claimIssuer
            value: value
            operator: null
        - ifFeatureChainExpression:
            selectors:
            - metadataSelectorDefinition:
                name: name
                description: description
                expressions:
                - metadataKey: metadataKey
                  textValue: textValue
                  operator: null
                - metadataKey: metadataKey
                  textValue: textValue
                  operator: null
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              idSelectorDefinition:
                identifier:
                  key: identifier
                name: name
                description: description
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              policySelectorDefinition:
                identityRestriction:
                  key: identityRestriction
                name: name
                description: description
                restrictionSelectors:
                - null
                - null
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              matchAllSelectorDefinition:
                name: name
                description: description
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
            - metadataSelectorDefinition:
                name: name
                description: description
                expressions:
                - metadataKey: metadataKey
                  textValue: textValue
                  operator: null
                - metadataKey: metadataKey
                  textValue: textValue
                  operator: null
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              idSelectorDefinition:
                identifier:
                  key: identifier
                name: name
                description: description
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              policySelectorDefinition:
                identityRestriction:
                  key: identityRestriction
                name: name
                description: description
                restrictionSelectors:
                - null
                - null
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              matchAllSelectorDefinition:
                name: name
                description: description
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
          ifIdentityScopeExpression:
            scopeName: scopeName
          ifRequestHeaderExpression:
            headerName: headerName
            value: value
            operator: null
          ifIdentityClaimExpression:
            claimType: claimType
            claimValueType: claimValueType
            claimOriginalIssuer: claimOriginalIssuer
            claimIssuer: claimIssuer
            value: value
            operator: null
        when:
          activate: 2000-01-23T04:56:07.000+00:00
          deactivate: 2000-01-23T04:56:07.000+00:00
        applications:
        - applications
        - applications
      properties:
        id:
          $ref: '#/components/schemas/PolicyId'
        description:
          description: Description of what the policy is entitling
          nullable: true
          type: string
        applications:
          description: Applications to which the policy applies
          items:
            type: string
          nullable: true
          type: array
        grant:
          $ref: '#/components/schemas/Grant'
        selectors:
          description: Selectors that this policy will be applied to
          items:
            $ref: '#/components/schemas/SelectorDefinition'
          nullable: true
          type: array
        for:
          description: '"For Specification" for when the policy is to be applied'
          items:
            $ref: '#/components/schemas/ForSpec'
          nullable: true
          type: array
        if:
          description: '"If Specification" for when the policy is to be applied'
          items:
            $ref: '#/components/schemas/IfExpression'
          nullable: true
          type: array
        when:
          $ref: '#/components/schemas/WhenSpec'
        how:
          $ref: '#/components/schemas/HowSpec'
        links:
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
          type: array
      type: object
    PolicySelectorDefinition:
      additionalProperties: false
      example:
        identityRestriction:
          key: identityRestriction
        name: name
        description: description
        restrictionSelectors:
        - null
        - null
        actions:
        - activity: activity
          scope: scope
          entity: entity
        - activity: activity
          scope: scope
          entity: entity
      properties:
        identityRestriction:
          additionalProperties:
            type: string
          nullable: true
          type: object
        restrictionSelectors:
          items:
            $ref: '#/components/schemas/SelectorDefinition'
          nullable: true
          type: array
        actions:
          items:
            $ref: '#/components/schemas/ActionId'
          minItems: 1
          type: array
        name:
          maxLength: 100
          minLength: 0
          nullable: true
          type: string
        description:
          maxLength: 1024
          minLength: 0
          nullable: true
          type: string
      required:
      - actions
      type: object
    PolicyType:
      enum:
      - Undefined
      - Entitlement
      - Licence
      type: string
    PolicyUpdateRequest:
      additionalProperties: false
      description: Update policy request
      example:
        how:
          type: type
          parameters:
          - value: value
            key: key
          - value: value
            key: key
        for:
        - effectiveRange:
            from: 2000-01-23T04:56:07.000+00:00
            to: 2000-01-23T04:56:07.000+00:00
          asAtRangeForSpec:
            from:
              dateTimeOffset: 2000-01-23T04:56:07.000+00:00
              value: value
            to:
              dateTimeOffset: 2000-01-23T04:56:07.000+00:00
              value: value
          effectiveDateHasQuality:
            quality: null
          asAtRelative:
            date: null
            unit: null
            adjustment: 6
            relativeToDateTime: null
          effectiveDateRelative:
            date: null
            unit: null
            adjustment: 1
            relativeToDateTime: null
        - effectiveRange:
            from: 2000-01-23T04:56:07.000+00:00
            to: 2000-01-23T04:56:07.000+00:00
          asAtRangeForSpec:
            from:
              dateTimeOffset: 2000-01-23T04:56:07.000+00:00
              value: value
            to:
              dateTimeOffset: 2000-01-23T04:56:07.000+00:00
              value: value
          effectiveDateHasQuality:
            quality: null
          asAtRelative:
            date: null
            unit: null
            adjustment: 6
            relativeToDateTime: null
          effectiveDateRelative:
            date: null
            unit: null
            adjustment: 1
            relativeToDateTime: null
        description: description
        grant: null
        selectors:
        - metadataSelectorDefinition:
            name: name
            description: description
            expressions:
            - metadataKey: metadataKey
              textValue: textValue
              operator: null
            - metadataKey: metadataKey
              textValue: textValue
              operator: null
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          idSelectorDefinition:
            identifier:
              key: identifier
            name: name
            description: description
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          policySelectorDefinition:
            identityRestriction:
              key: identityRestriction
            name: name
            description: description
            restrictionSelectors:
            - null
            - null
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          matchAllSelectorDefinition:
            name: name
            description: description
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
        - metadataSelectorDefinition:
            name: name
            description: description
            expressions:
            - metadataKey: metadataKey
              textValue: textValue
              operator: null
            - metadataKey: metadataKey
              textValue: textValue
              operator: null
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          idSelectorDefinition:
            identifier:
              key: identifier
            name: name
            description: description
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          policySelectorDefinition:
            identityRestriction:
              key: identityRestriction
            name: name
            description: description
            restrictionSelectors:
            - null
            - null
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
          matchAllSelectorDefinition:
            name: name
            description: description
            actions:
            - activity: activity
              scope: scope
              entity: entity
            - activity: activity
              scope: scope
              entity: entity
        if:
        - ifFeatureChainExpression:
            selectors:
            - metadataSelectorDefinition:
                name: name
                description: description
                expressions:
                - metadataKey: metadataKey
                  textValue: textValue
                  operator: null
                - metadataKey: metadataKey
                  textValue: textValue
                  operator: null
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              idSelectorDefinition:
                identifier:
                  key: identifier
                name: name
                description: description
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              policySelectorDefinition:
                identityRestriction:
                  key: identityRestriction
                name: name
                description: description
                restrictionSelectors:
                - null
                - null
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              matchAllSelectorDefinition:
                name: name
                description: description
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
            - metadataSelectorDefinition:
                name: name
                description: description
                expressions:
                - metadataKey: metadataKey
                  textValue: textValue
                  operator: null
                - metadataKey: metadataKey
                  textValue: textValue
                  operator: null
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              idSelectorDefinition:
                identifier:
                  key: identifier
                name: name
                description: description
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              policySelectorDefinition:
                identityRestriction:
                  key: identityRestriction
                name: name
                description: description
                restrictionSelectors:
                - null
                - null
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              matchAllSelectorDefinition:
                name: name
                description: description
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
          ifIdentityScopeExpression:
            scopeName: scopeName
          ifRequestHeaderExpression:
            headerName: headerName
            value: value
            operator: null
          ifIdentityClaimExpression:
            claimType: claimType
            claimValueType: claimValueType
            claimOriginalIssuer: claimOriginalIssuer
            claimIssuer: claimIssuer
            value: value
            operator: null
        - ifFeatureChainExpression:
            selectors:
            - metadataSelectorDefinition:
                name: name
                description: description
                expressions:
                - metadataKey: metadataKey
                  textValue: textValue
                  operator: null
                - metadataKey: metadataKey
                  textValue: textValue
                  operator: null
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              idSelectorDefinition:
                identifier:
                  key: identifier
                name: name
                description: description
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              policySelectorDefinition:
                identityRestriction:
                  key: identityRestriction
                name: name
                description: description
                restrictionSelectors:
                - null
                - null
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              matchAllSelectorDefinition:
                name: name
                description: description
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
            - metadataSelectorDefinition:
                name: name
                description: description
                expressions:
                - metadataKey: metadataKey
                  textValue: textValue
                  operator: null
                - metadataKey: metadataKey
                  textValue: textValue
                  operator: null
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              idSelectorDefinition:
                identifier:
                  key: identifier
                name: name
                description: description
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              policySelectorDefinition:
                identityRestriction:
                  key: identityRestriction
                name: name
                description: description
                restrictionSelectors:
                - null
                - null
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
              matchAllSelectorDefinition:
                name: name
                description: description
                actions:
                - activity: activity
                  scope: scope
                  entity: entity
                - activity: activity
                  scope: scope
                  entity: entity
          ifIdentityScopeExpression:
            scopeName: scopeName
          ifRequestHeaderExpression:
            headerName: headerName
            value: value
            operator: null
          ifIdentityClaimExpression:
            claimType: claimType
            claimValueType: claimValueType
            claimOriginalIssuer: claimOriginalIssuer
            claimIssuer: claimIssuer
            value: value
            operator: null
        when:
          activate: 2000-01-23T04:56:07.000+00:00
          deactivate: 2000-01-23T04:56:07.000+00:00
        applications:
        - applications
        - applications
      properties:
        description:
          description: Description of what the policy will be used for
          maxLength: 1024
          minLength: 0
          nullable: true
          type: string
        applications:
          description: Applications this policy is used with
          items:
            type: string
          nullable: true
          type: array
        grant:
          $ref: '#/components/schemas/Grant'
        selectors:
          description: Selectors that identify what resources this policy qualifies
            for
          items:
            $ref: '#/components/schemas/SelectorDefinition'
          type: array
        for:
          description: '"For Specification" for when the policy is to be applied'
          items:
            $ref: '#/components/schemas/ForSpec'
          nullable: true
          type: array
        if:
          description: '"If Specification" for when the policy is to be applied'
          items:
            $ref: '#/components/schemas/IfExpression'
          nullable: true
          type: array
        when:
          $ref: '#/components/schemas/WhenSpec'
        how:
          $ref: '#/components/schemas/HowSpec'
      required:
      - grant
      - selectors
      - when
      type: object
    RelativeToDateTime:
      enum:
      - Undefined
      - BeforeOrOn
      - Before
      - OnDayOf
      - AfterOrOn
      - After
      - Exactly
      type: string
    RemoveFromPolicyCollectionRequest:
      additionalProperties: false
      description: Base properties to create or update a policy collection
      example:
        policyCollections:
        - code: code
          scope: scope
        - code: code
          scope: scope
        policies:
        - code: code
          scope: scope
        - code: code
          scope: scope
      properties:
        policies:
          description: The identifiers of the Policies to be removed from the collection.
          items:
            $ref: '#/components/schemas/PolicyId'
          nullable: true
          type: array
        policyCollections:
          description: The identifiers of the PolicyCollections to be removed from
            the collection.
          items:
            $ref: '#/components/schemas/PolicyCollectionId'
          nullable: true
          type: array
      type: object
    RequestDetails:
      additionalProperties: false
      description: The details of the requested evaluation
      example:
        fromEffectiveDate: 2000-01-23T04:56:07.000+00:00
        fromAsAt: 2000-01-23T04:56:07.000+00:00
        action:
          entityCode: entityCode
          activity: activity
          scope: scope
        toEffectiveDate: 2000-01-23T04:56:07.000+00:00
        toAsAt: 2000-01-23T04:56:07.000+00:00
      properties:
        action:
          $ref: '#/components/schemas/RequestedActionKey'
        fromEffectiveDate:
          description: "The start date for the requested effective date range for\
            \ the resource (if null, UtcNow)"
          format: date-time
          nullable: true
          type: string
        toEffectiveDate:
          description: "The end date for the requested effective date range for the\
            \ resource (if null, same as from date)"
          format: date-time
          nullable: true
          type: string
        fromAsAt:
          description: "The requested AsAt date for the resource (if null, Latest).\
            \ If specifying a range of AsAt dates, this is the lower bounds."
          format: date-time
          nullable: true
          type: string
        toAsAt:
          description: Upper bound if specifying a request that requires a range of
            AsAt dates. This is used if specifying the desire to grant access for
            a user between an AsAt range.
          format: date-time
          nullable: true
          type: string
      required:
      - action
      type: object
    RequestedActionKey:
      additionalProperties: false
      description: A fully qualified action identifier
      example:
        entityCode: entityCode
        activity: activity
        scope: scope
      properties:
        entityCode:
          description: The type of the resource on which the activity would be performed
          maxLength: 100
          minLength: 3
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        scope:
          description: The scope/provider/vendor of the activity
          maxLength: 100
          minLength: 3
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        activity:
          description: The identifier of the action to be performed on the resource
          maxLength: 100
          minLength: 3
          type: string
      required:
      - activity
      - entityCode
      - scope
      type: object
    ResourceDetails:
      additionalProperties: false
      description: Details about the resource being requested that may be pertinent
        to the entitlement evaluation
      example:
        metadata:
          key:
          - provider: provider
            value: value
          - provider: provider
            value: value
        id:
          key: id
      properties:
        id:
          additionalProperties:
            type: string
          description: The identifier of the resource being evaluated
          type: object
        metadata:
          additionalProperties:
            items:
              $ref: '#/components/schemas/EntitlementMetadata'
            nullable: true
            type: array
          description: Any metadata associated with the resource being requested
          nullable: true
          type: object
      required:
      - id
      type: object
    ResourceListOfAccessControlledResource:
      additionalProperties: false
      example:
        previousPage: previousPage
        nextPage: nextPage
        values:
        - application: application
          name: name
          description: description
          links:
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
          actions:
          - limitedSet:
            - identifier:
                key: identifier
              name: name
              description: description
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            - identifier:
                key: identifier
              name: name
              description: description
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            description: description
            action:
              activity: activity
              scope: scope
              entity: entity
            links:
            - method: method
              description: description
              href: https://openapi-generator.tech
              relation: relation
            - method: method
              description: description
              href: https://openapi-generator.tech
              relation: relation
          - limitedSet:
            - identifier:
                key: identifier
              name: name
              description: description
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            - identifier:
                key: identifier
              name: name
              description: description
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            description: description
            action:
              activity: activity
              scope: scope
              entity: entity
            links:
            - method: method
              description: description
              href: https://openapi-generator.tech
              relation: relation
            - method: method
              description: description
              href: https://openapi-generator.tech
              relation: relation
          identifierParts:
          - displayName: displayName
            name: name
            index: 0
            description: description
            links:
            - method: method
              description: description
              href: https://openapi-generator.tech
              relation: relation
            - method: method
              description: description
              href: https://openapi-generator.tech
              relation: relation
            required: true
          - displayName: displayName
            name: name
            index: 0
            description: description
            links:
            - method: method
              description: description
              href: https://openapi-generator.tech
              relation: relation
            - method: method
              description: description
              href: https://openapi-generator.tech
              relation: relation
            required: true
        - application: application
          name: name
          description: description
          links:
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
          actions:
          - limitedSet:
            - identifier:
                key: identifier
              name: name
              description: description
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            - identifier:
                key: identifier
              name: name
              description: description
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            description: description
            action:
              activity: activity
              scope: scope
              entity: entity
            links:
            - method: method
              description: description
              href: https://openapi-generator.tech
              relation: relation
            - method: method
              description: description
              href: https://openapi-generator.tech
              relation: relation
          - limitedSet:
            - identifier:
                key: identifier
              name: name
              description: description
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            - identifier:
                key: identifier
              name: name
              description: description
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            description: description
            action:
              activity: activity
              scope: scope
              entity: entity
            links:
            - method: method
              description: description
              href: https://openapi-generator.tech
              relation: relation
            - method: method
              description: description
              href: https://openapi-generator.tech
              relation: relation
          identifierParts:
          - displayName: displayName
            name: name
            index: 0
            description: description
            links:
            - method: method
              description: description
              href: https://openapi-generator.tech
              relation: relation
            - method: method
              description: description
              href: https://openapi-generator.tech
              relation: relation
            required: true
          - displayName: displayName
            name: name
            index: 0
            description: description
            links:
            - method: method
              description: description
              href: https://openapi-generator.tech
              relation: relation
            - method: method
              description: description
              href: https://openapi-generator.tech
              relation: relation
            required: true
        links:
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        href: https://openapi-generator.tech
      properties:
        values:
          items:
            $ref: '#/components/schemas/AccessControlledResource'
          type: array
        href:
          format: uri
          nullable: true
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
          type: array
        nextPage:
          nullable: true
          type: string
        previousPage:
          nullable: true
          type: string
      required:
      - values
      type: object
    ResourceListOfPolicyCollectionResponse:
      additionalProperties: false
      example:
        previousPage: previousPage
        nextPage: nextPage
        values:
        - policyCollections:
          - code: code
            scope: scope
          - code: code
            scope: scope
          policies:
          - code: code
            scope: scope
          - code: code
            scope: scope
          description: description
          links:
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
          id:
            code: code
            scope: scope
        - policyCollections:
          - code: code
            scope: scope
          - code: code
            scope: scope
          policies:
          - code: code
            scope: scope
          - code: code
            scope: scope
          description: description
          links:
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
          id:
            code: code
            scope: scope
        links:
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        href: https://openapi-generator.tech
      properties:
        values:
          items:
            $ref: '#/components/schemas/PolicyCollectionResponse'
          type: array
        href:
          format: uri
          nullable: true
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
          type: array
        nextPage:
          nullable: true
          type: string
        previousPage:
          nullable: true
          type: string
      required:
      - values
      type: object
    ResourceListOfPolicyResponse:
      additionalProperties: false
      example:
        previousPage: previousPage
        nextPage: nextPage
        values:
        - how:
            type: type
            parameters:
            - value: value
              key: key
            - value: value
              key: key
          for:
          - effectiveRange:
              from: 2000-01-23T04:56:07.000+00:00
              to: 2000-01-23T04:56:07.000+00:00
            asAtRangeForSpec:
              from:
                dateTimeOffset: 2000-01-23T04:56:07.000+00:00
                value: value
              to:
                dateTimeOffset: 2000-01-23T04:56:07.000+00:00
                value: value
            effectiveDateHasQuality:
              quality: null
            asAtRelative:
              date: null
              unit: null
              adjustment: 6
              relativeToDateTime: null
            effectiveDateRelative:
              date: null
              unit: null
              adjustment: 1
              relativeToDateTime: null
          - effectiveRange:
              from: 2000-01-23T04:56:07.000+00:00
              to: 2000-01-23T04:56:07.000+00:00
            asAtRangeForSpec:
              from:
                dateTimeOffset: 2000-01-23T04:56:07.000+00:00
                value: value
              to:
                dateTimeOffset: 2000-01-23T04:56:07.000+00:00
                value: value
            effectiveDateHasQuality:
              quality: null
            asAtRelative:
              date: null
              unit: null
              adjustment: 6
              relativeToDateTime: null
            effectiveDateRelative:
              date: null
              unit: null
              adjustment: 1
              relativeToDateTime: null
          description: description
          links:
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
          id:
            code: code
            scope: scope
          grant: null
          selectors:
          - metadataSelectorDefinition:
              name: name
              description: description
              expressions:
              - metadataKey: metadataKey
                textValue: textValue
                operator: null
              - metadataKey: metadataKey
                textValue: textValue
                operator: null
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            idSelectorDefinition:
              identifier:
                key: identifier
              name: name
              description: description
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            policySelectorDefinition:
              identityRestriction:
                key: identityRestriction
              name: name
              description: description
              restrictionSelectors:
              - null
              - null
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            matchAllSelectorDefinition:
              name: name
              description: description
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
          - metadataSelectorDefinition:
              name: name
              description: description
              expressions:
              - metadataKey: metadataKey
                textValue: textValue
                operator: null
              - metadataKey: metadataKey
                textValue: textValue
                operator: null
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            idSelectorDefinition:
              identifier:
                key: identifier
              name: name
              description: description
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            policySelectorDefinition:
              identityRestriction:
                key: identityRestriction
              name: name
              description: description
              restrictionSelectors:
              - null
              - null
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            matchAllSelectorDefinition:
              name: name
              description: description
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
          if:
          - ifFeatureChainExpression:
              selectors:
              - metadataSelectorDefinition:
                  name: name
                  description: description
                  expressions:
                  - metadataKey: metadataKey
                    textValue: textValue
                    operator: null
                  - metadataKey: metadataKey
                    textValue: textValue
                    operator: null
                  actions:
                  - activity: activity
                    scope: scope
                    entity: entity
                  - activity: activity
                    scope: scope
                    entity: entity
                idSelectorDefinition:
                  identifier:
                    key: identifier
                  name: name
                  description: description
                  actions:
                  - activity: activity
                    scope: scope
                    entity: entity
                  - activity: activity
                    scope: scope
                    entity: entity
                policySelectorDefinition:
                  identityRestriction:
                    key: identityRestriction
                  name: name
                  description: description
                  restrictionSelectors:
                  - null
                  - null
                  actions:
                  - activity: activity
                    scope: scope
                    entity: entity
                  - activity: activity
                    scope: scope
                    entity: entity
                matchAllSelectorDefinition:
                  name: name
                  description: description
                  actions:
                  - activity: activity
                    scope: scope
                    entity: entity
                  - activity: activity
                    scope: scope
                    entity: entity
              - metadataSelectorDefinition:
                  name: name
                  description: description
                  expressions:
                  - metadataKey: metadataKey
                    textValue: textValue
                    operator: null
                  - metadataKey: metadataKey
                    textValue: textValue
                    operator: null
                  actions:
                  - activity: activity
                    scope: scope
                    entity: entity
                  - activity: activity
                    scope: scope
                    entity: entity
                idSelectorDefinition:
                  identifier:
                    key: identifier
                  name: name
                  description: description
                  actions:
                  - activity: activity
                    scope: scope
                    entity: entity
                  - activity: activity
                    scope: scope
                    entity: entity
                policySelectorDefinition:
                  identityRestriction:
                    key: identityRestriction
                  name: name
                  description: description
                  restrictionSelectors:
                  - null
                  - null
                  actions:
                  - activity: activity
                    scope: scope
                    entity: entity
                  - activity: activity
                    scope: scope
                    entity: entity
                matchAllSelectorDefinition:
                  name: name
                  description: description
                  actions:
                  - activity: activity
                    scope: scope
                    entity: entity
                  - activity: activity
                    scope: scope
                    entity: entity
            ifIdentityScopeExpression:
              scopeName: scopeName
            ifRequestHeaderExpression:
              headerName: headerName
              value: value
              operator: null
            ifIdentityClaimExpression:
              claimType: claimType
              claimValueType: claimValueType
              claimOriginalIssuer: claimOriginalIssuer
              claimIssuer: claimIssuer
              value: value
              operator: null
          - ifFeatureChainExpression:
              selectors:
              - metadataSelectorDefinition:
                  name: name
                  description: description
                  expressions:
                  - metadataKey: metadataKey
                    textValue: textValue
                    operator: null
                  - metadataKey: metadataKey
                    textValue: textValue
                    operator: null
                  actions:
                  - activity: activity
                    scope: scope
                    entity: entity
                  - activity: activity
                    scope: scope
                    entity: entity
                idSelectorDefinition:
                  identifier:
                    key: identifier
                  name: name
                  description: description
                  actions:
                  - activity: activity
                    scope: scope
                    entity: entity
                  - activity: activity
                    scope: scope
                    entity: entity
                policySelectorDefinition:
                  identityRestriction:
                    key: identityRestriction
                  name: name
                  description: description
                  restrictionSelectors:
                  - null
                  - null
                  actions:
                  - activity: activity
                    scope: scope
                    entity: entity
                  - activity: activity
                    scope: scope
                    entity: entity
                matchAllSelectorDefinition:
                  name: name
                  description: description
                  actions:
                  - activity: activity
                    scope: scope
                    entity: entity
                  - activity: activity
                    scope: scope
                    entity: entity
              - metadataSelectorDefinition:
                  name: name
                  description: description
                  expressions:
                  - metadataKey: metadataKey
                    textValue: textValue
                    operator: null
                  - metadataKey: metadataKey
                    textValue: textValue
                    operator: null
                  actions:
                  - activity: activity
                    scope: scope
                    entity: entity
                  - activity: activity
                    scope: scope
                    entity: entity
                idSelectorDefinition:
                  identifier:
                    key: identifier
                  name: name
                  description: description
                  actions:
                  - activity: activity
                    scope: scope
                    entity: entity
                  - activity: activity
                    scope: scope
                    entity: entity
                policySelectorDefinition:
                  identityRestriction:
                    key: identityRestriction
                  name: name
                  description: description
                  restrictionSelectors:
                  - null
                  - null
                  actions:
                  - activity: activity
                    scope: scope
                    entity: entity
                  - activity: activity
                    scope: scope
                    entity: entity
                matchAllSelectorDefinition:
                  name: name
                  description: description
                  actions:
                  - activity: activity
                    scope: scope
                    entity: entity
                  - activity: activity
                    scope: scope
                    entity: entity
            ifIdentityScopeExpression:
              scopeName: scopeName
            ifRequestHeaderExpression:
              headerName: headerName
              value: value
              operator: null
            ifIdentityClaimExpression:
              claimType: claimType
              claimValueType: claimValueType
              claimOriginalIssuer: claimOriginalIssuer
              claimIssuer: claimIssuer
              value: value
              operator: null
          when:
            activate: 2000-01-23T04:56:07.000+00:00
            deactivate: 2000-01-23T04:56:07.000+00:00
          applications:
          - applications
          - applications
        - how:
            type: type
            parameters:
            - value: value
              key: key
            - value: value
              key: key
          for:
          - effectiveRange:
              from: 2000-01-23T04:56:07.000+00:00
              to: 2000-01-23T04:56:07.000+00:00
            asAtRangeForSpec:
              from:
                dateTimeOffset: 2000-01-23T04:56:07.000+00:00
                value: value
              to:
                dateTimeOffset: 2000-01-23T04:56:07.000+00:00
                value: value
            effectiveDateHasQuality:
              quality: null
            asAtRelative:
              date: null
              unit: null
              adjustment: 6
              relativeToDateTime: null
            effectiveDateRelative:
              date: null
              unit: null
              adjustment: 1
              relativeToDateTime: null
          - effectiveRange:
              from: 2000-01-23T04:56:07.000+00:00
              to: 2000-01-23T04:56:07.000+00:00
            asAtRangeForSpec:
              from:
                dateTimeOffset: 2000-01-23T04:56:07.000+00:00
                value: value
              to:
                dateTimeOffset: 2000-01-23T04:56:07.000+00:00
                value: value
            effectiveDateHasQuality:
              quality: null
            asAtRelative:
              date: null
              unit: null
              adjustment: 6
              relativeToDateTime: null
            effectiveDateRelative:
              date: null
              unit: null
              adjustment: 1
              relativeToDateTime: null
          description: description
          links:
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
          id:
            code: code
            scope: scope
          grant: null
          selectors:
          - metadataSelectorDefinition:
              name: name
              description: description
              expressions:
              - metadataKey: metadataKey
                textValue: textValue
                operator: null
              - metadataKey: metadataKey
                textValue: textValue
                operator: null
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            idSelectorDefinition:
              identifier:
                key: identifier
              name: name
              description: description
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            policySelectorDefinition:
              identityRestriction:
                key: identityRestriction
              name: name
              description: description
              restrictionSelectors:
              - null
              - null
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            matchAllSelectorDefinition:
              name: name
              description: description
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
          - metadataSelectorDefinition:
              name: name
              description: description
              expressions:
              - metadataKey: metadataKey
                textValue: textValue
                operator: null
              - metadataKey: metadataKey
                textValue: textValue
                operator: null
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            idSelectorDefinition:
              identifier:
                key: identifier
              name: name
              description: description
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            policySelectorDefinition:
              identityRestriction:
                key: identityRestriction
              name: name
              description: description
              restrictionSelectors:
              - null
              - null
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
            matchAllSelectorDefinition:
              name: name
              description: description
              actions:
              - activity: activity
                scope: scope
                entity: entity
              - activity: activity
                scope: scope
                entity: entity
          if:
          - ifFeatureChainExpression:
              selectors:
              - metadataSelectorDefinition:
                  name: name
                  description: description
                  expressions:
                  - metadataKey: metadataKey
                    textValue: textValue
                    operator: null
                  - metadataKey: metadataKey
                    textValue: textValue
                    operator: null
                  actions:
                  - activity: activity
                    scope: scope
                    entity: entity
                  - activity: activity
                    scope: scope
                    entity: entity
                idSelectorDefinition:
                  identifier:
                    key: identifier
                  name: name
                  description: description
                  actions:
                  - activity: activity
                    scope: scope
                    entity: entity
                  - activity: activity
                    scope: scope
                    entity: entity
                policySelectorDefinition:
                  identityRestriction:
                    key: identityRestriction
                  name: name
                  description: description
                  restrictionSelectors:
                  - null
                  - null
                  actions:
                  - activity: activity
                    scope: scope
                    entity: entity
                  - activity: activity
                    scope: scope
                    entity: entity
                matchAllSelectorDefinition:
                  name: name
                  description: description
                  actions:
                  - activity: activity
                    scope: scope
                    entity: entity
                  - activity: activity
                    scope: scope
                    entity: entity
              - metadataSelectorDefinition:
                  name: name
                  description: description
                  expressions:
                  - metadataKey: metadataKey
                    textValue: textValue
                    operator: null
                  - metadataKey: metadataKey
                    textValue: textValue
                    operator: null
                  actions:
                  - activity: activity
                    scope: scope
                    entity: entity
                  - activity: activity
                    scope: scope
                    entity: entity
                idSelectorDefinition:
                  identifier:
                    key: identifier
                  name: name
                  description: description
                  actions:
                  - activity: activity
                    scope: scope
                    entity: entity
                  - activity: activity
                    scope: scope
                    entity: entity
                policySelectorDefinition:
                  identityRestriction:
                    key: identityRestriction
                  name: name
                  description: description
                  restrictionSelectors:
                  - null
                  - null
                  actions:
                  - activity: activity
                    scope: scope
                    entity: entity
                  - activity: activity
                    scope: scope
                    entity: entity
                matchAllSelectorDefinition:
                  name: name
                  description: description
                  actions:
                  - activity: activity
                    scope: scope
                    entity: entity
                  - activity: activity
                    scope: scope
                    entity: entity
            ifIdentityScopeExpression:
              scopeName: scopeName
            ifRequestHeaderExpression:
              headerName: headerName
              value: value
              operator: null
            ifIdentityClaimExpression:
              claimType: claimType
              claimValueType: claimValueType
              claimOriginalIssuer: claimOriginalIssuer
              claimIssuer: claimIssuer
              value: value
              operator: null
          - ifFeatureChainExpression:
              selectors:
              - metadataSelectorDefinition:
                  name: name
                  description: description
                  expressions:
                  - metadataKey: metadataKey
                    textValue: textValue
                    operator: null
                  - metadataKey: metadataKey
                    textValue: textValue
                    operator: null
                  actions:
                  - activity: activity
                    scope: scope
                    entity: entity
                  - activity: activity
                    scope: scope
                    entity: entity
                idSelectorDefinition:
                  identifier:
                    key: identifier
                  name: name
                  description: description
                  actions:
                  - activity: activity
                    scope: scope
                    entity: entity
                  - activity: activity
                    scope: scope
                    entity: entity
                policySelectorDefinition:
                  identityRestriction:
                    key: identityRestriction
                  name: name
                  description: description
                  restrictionSelectors:
                  - null
                  - null
                  actions:
                  - activity: activity
                    scope: scope
                    entity: entity
                  - activity: activity
                    scope: scope
                    entity: entity
                matchAllSelectorDefinition:
                  name: name
                  description: description
                  actions:
                  - activity: activity
                    scope: scope
                    entity: entity
                  - activity: activity
                    scope: scope
                    entity: entity
              - metadataSelectorDefinition:
                  name: name
                  description: description
                  expressions:
                  - metadataKey: metadataKey
                    textValue: textValue
                    operator: null
                  - metadataKey: metadataKey
                    textValue: textValue
                    operator: null
                  actions:
                  - activity: activity
                    scope: scope
                    entity: entity
                  - activity: activity
                    scope: scope
                    entity: entity
                idSelectorDefinition:
                  identifier:
                    key: identifier
                  name: name
                  description: description
                  actions:
                  - activity: activity
                    scope: scope
                    entity: entity
                  - activity: activity
                    scope: scope
                    entity: entity
                policySelectorDefinition:
                  identityRestriction:
                    key: identityRestriction
                  name: name
                  description: description
                  restrictionSelectors:
                  - null
                  - null
                  actions:
                  - activity: activity
                    scope: scope
                    entity: entity
                  - activity: activity
                    scope: scope
                    entity: entity
                matchAllSelectorDefinition:
                  name: name
                  description: description
                  actions:
                  - activity: activity
                    scope: scope
                    entity: entity
                  - activity: activity
                    scope: scope
                    entity: entity
            ifIdentityScopeExpression:
              scopeName: scopeName
            ifRequestHeaderExpression:
              headerName: headerName
              value: value
              operator: null
            ifIdentityClaimExpression:
              claimType: claimType
              claimValueType: claimValueType
              claimOriginalIssuer: claimOriginalIssuer
              claimIssuer: claimIssuer
              value: value
              operator: null
          when:
            activate: 2000-01-23T04:56:07.000+00:00
            deactivate: 2000-01-23T04:56:07.000+00:00
          applications:
          - applications
          - applications
        links:
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        href: https://openapi-generator.tech
      properties:
        values:
          items:
            $ref: '#/components/schemas/PolicyResponse'
          type: array
        href:
          format: uri
          nullable: true
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
          type: array
        nextPage:
          nullable: true
          type: string
        previousPage:
          nullable: true
          type: string
      required:
      - values
      type: object
    ResourceListOfUserRoleResponse:
      additionalProperties: false
      example:
        previousPage: previousPage
        nextPage: nextPage
        values:
        - resource:
            policyIdRoleResource:
              policyCollections:
              - code: code
                scope: scope
              - code: code
                scope: scope
              policies:
              - code: code
                scope: scope
              - code: code
                scope: scope
            nonTransitiveSupervisorRoleResource:
              roles:
              - key: roles
              - key: roles
          links:
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
          id:
            code: code
            scope: scope
        - resource:
            policyIdRoleResource:
              policyCollections:
              - code: code
                scope: scope
              - code: code
                scope: scope
              policies:
              - code: code
                scope: scope
              - code: code
                scope: scope
            nonTransitiveSupervisorRoleResource:
              roles:
              - key: roles
              - key: roles
          links:
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
          - method: method
            description: description
            href: https://openapi-generator.tech
            relation: relation
          id:
            code: code
            scope: scope
        links:
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        href: https://openapi-generator.tech
      properties:
        values:
          items:
            $ref: '#/components/schemas/UserRoleResponse'
          type: array
        href:
          format: uri
          nullable: true
          type: string
        links:
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
          type: array
        nextPage:
          nullable: true
          type: string
        previousPage:
          nullable: true
          type: string
      required:
      - values
      type: object
    RoleCreationRequest:
      additionalProperties: false
      description: Request to create a role
      example:
        code: code
        resource:
          policyIdRoleResource:
            policyCollections:
            - code: code
              scope: scope
            - code: code
              scope: scope
            policies:
            - code: code
              scope: scope
            - code: code
              scope: scope
          nonTransitiveSupervisorRoleResource:
            roles:
            - key: roles
            - key: roles
        description: description
        when:
          activate: 2000-01-23T04:56:07.000+00:00
          deactivate: 2000-01-23T04:56:07.000+00:00
      properties:
        code:
          description: The code of the role
          minLength: 1
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        description:
          description: The description of the role
          maxLength: 1024
          minLength: 0
          nullable: true
          type: string
        resource:
          $ref: '#/components/schemas/RoleResourceRequest'
        when:
          $ref: '#/components/schemas/WhenSpec'
      required:
      - code
      - resource
      - when
      type: object
    RoleId:
      additionalProperties: false
      example:
        code: code
        scope: scope
      properties:
        scope:
          maxLength: 100
          minLength: 3
          nullable: true
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        code:
          maxLength: 100
          minLength: 3
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
      required:
      - code
      type: object
    RoleResourceRequest:
      additionalProperties: false
      description: RoleResourceRequest
      example:
        policyIdRoleResource:
          policyCollections:
          - code: code
            scope: scope
          - code: code
            scope: scope
          policies:
          - code: code
            scope: scope
          - code: code
            scope: scope
        nonTransitiveSupervisorRoleResource:
          roles:
          - key: roles
          - key: roles
      properties:
        nonTransitiveSupervisorRoleResource:
          $ref: '#/components/schemas/NonTransitiveSupervisorRoleResource'
        policyIdRoleResource:
          $ref: '#/components/schemas/PolicyIdRoleResource'
      type: object
    RoleResponse:
      additionalProperties: false
      description: Response object from the role API
      example:
        roleHierarchyIndex: 0
        resource:
          policyIdRoleResource:
            policyCollections:
            - code: code
              scope: scope
            - code: code
              scope: scope
            policies:
            - code: code
              scope: scope
            - code: code
              scope: scope
          nonTransitiveSupervisorRoleResource:
            roles:
            - key: roles
            - key: roles
        limit:
          key: limit
        description: description
        permission: permission
        links:
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        id:
          code: code
          scope: scope
        when:
          activate: 2000-01-23T04:56:07.000+00:00
          deactivate: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          $ref: '#/components/schemas/RoleId'
        roleHierarchyIndex:
          description: The hierarchical index of the role
          format: int32
          type: integer
        description:
          description: The description of the role
          nullable: true
          type: string
        resource:
          $ref: '#/components/schemas/RoleResourceRequest'
        when:
          $ref: '#/components/schemas/WhenSpec'
        permission:
          description: The action key of the role
          minLength: 1
          type: string
        limit:
          additionalProperties:
            type: string
          description: The identifiers of the role with the maximum privileges that
            this role can have
          nullable: true
          type: object
        links:
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
          type: array
      required:
      - id
      - permission
      - resource
      - roleHierarchyIndex
      - when
      type: object
    RoleUpdateRequest:
      additionalProperties: false
      description: Role update does not allow the changing of the id
      example:
        resource:
          policyIdRoleResource:
            policyCollections:
            - code: code
              scope: scope
            - code: code
              scope: scope
            policies:
            - code: code
              scope: scope
            - code: code
              scope: scope
          nonTransitiveSupervisorRoleResource:
            roles:
            - key: roles
            - key: roles
        description: description
        when:
          activate: 2000-01-23T04:56:07.000+00:00
          deactivate: 2000-01-23T04:56:07.000+00:00
      properties:
        description:
          description: The description of the role
          maxLength: 1024
          minLength: 0
          nullable: true
          type: string
        resource:
          $ref: '#/components/schemas/RoleResourceRequest'
        when:
          $ref: '#/components/schemas/WhenSpec'
      required:
      - resource
      - when
      type: object
    SelectorDefinition:
      additionalProperties: false
      example:
        metadataSelectorDefinition:
          name: name
          description: description
          expressions:
          - metadataKey: metadataKey
            textValue: textValue
            operator: null
          - metadataKey: metadataKey
            textValue: textValue
            operator: null
          actions:
          - activity: activity
            scope: scope
            entity: entity
          - activity: activity
            scope: scope
            entity: entity
        idSelectorDefinition:
          identifier:
            key: identifier
          name: name
          description: description
          actions:
          - activity: activity
            scope: scope
            entity: entity
          - activity: activity
            scope: scope
            entity: entity
        policySelectorDefinition:
          identityRestriction:
            key: identityRestriction
          name: name
          description: description
          restrictionSelectors:
          - null
          - null
          actions:
          - activity: activity
            scope: scope
            entity: entity
          - activity: activity
            scope: scope
            entity: entity
        matchAllSelectorDefinition:
          name: name
          description: description
          actions:
          - activity: activity
            scope: scope
            entity: entity
          - activity: activity
            scope: scope
            entity: entity
      properties:
        metadataSelectorDefinition:
          $ref: '#/components/schemas/MetadataSelectorDefinition'
        idSelectorDefinition:
          $ref: '#/components/schemas/IdSelectorDefinition'
        matchAllSelectorDefinition:
          $ref: '#/components/schemas/MatchAllSelectorDefinition'
        policySelectorDefinition:
          $ref: '#/components/schemas/PolicySelectorDefinition'
      type: object
    TextOperator:
      enum:
      - Undefined
      - EqualsCaseSensitive
      - EqualsCaseInsensitive
      - NotEqualsCaseSensitive
      - NotEqualsCaseInsensitive
      - ContainsCaseSensitive
      - NotPresentOrNotContainsCaseSensitive
      - NotPresent
      - InCaseInsensitive
      type: string
    UserRoleCreationRequest:
      additionalProperties: false
      description: Dto used to request creating a user's role
      example:
        resource:
          policyCollections:
          - code: code
            scope: scope
          - code: code
            scope: scope
          policies:
          - code: code
            scope: scope
          - code: code
            scope: scope
        userId: userId
      properties:
        userId:
          description: The Id of the user for whom to create the role.
          minLength: 1
          pattern: "^(?=.*[a-zA-Z])[\\w][\\w +-]{2,100}$"
          type: string
        resource:
          $ref: '#/components/schemas/PolicyIdRoleResource'
      required:
      - resource
      - userId
      type: object
    UserRoleResponse:
      additionalProperties: false
      description: Response object from the user role API
      example:
        resource:
          policyIdRoleResource:
            policyCollections:
            - code: code
              scope: scope
            - code: code
              scope: scope
            policies:
            - code: code
              scope: scope
            - code: code
              scope: scope
          nonTransitiveSupervisorRoleResource:
            roles:
            - key: roles
            - key: roles
        links:
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        - method: method
          description: description
          href: https://openapi-generator.tech
          relation: relation
        id:
          code: code
          scope: scope
      properties:
        resource:
          $ref: '#/components/schemas/RoleResourceRequest'
        id:
          $ref: '#/components/schemas/RoleId'
        links:
          items:
            $ref: '#/components/schemas/Link'
          nullable: true
          type: array
      required:
      - id
      - resource
      type: object
    UserRoleUpdateRequest:
      additionalProperties: false
      description: Dto used to request updating a user's role
      example:
        resource:
          policyCollections:
          - code: code
            scope: scope
          - code: code
            scope: scope
          policies:
          - code: code
            scope: scope
          - code: code
            scope: scope
      properties:
        resource:
          $ref: '#/components/schemas/PolicyIdRoleResource'
      required:
      - resource
      type: object
    WhenSpec:
      additionalProperties: false
      example:
        activate: 2000-01-23T04:56:07.000+00:00
        deactivate: 2000-01-23T04:56:07.000+00:00
      properties:
        activate:
          format: date-time
          type: string
        deactivate:
          format: date-time
          nullable: true
          type: string
      required:
      - activate
      type: object
  securitySchemes:
    oauth2:
      description: OAuth2 Implicit Grant
      flows:
        implicit:
          authorizationUrl: https://lusid.okta.com/oauth2/default/v1/authorize
          scopes: {}
      type: oauth2
x-tagGroups:
  name: API
  tags:
  - Application Metadata
  - Policies
  - Roles
  - User-roles
x-group-parameters: true

